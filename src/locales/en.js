const en = {
  // Login related
  login: {
    title: 'SS.AI Customer Service',
    platformTitle: 'Whatto Flow - Your Chatbot Flow Platform',
    userId: 'User ID',
    password: 'Password',
    loginButton: 'Login',
    loginSuccess: 'Login successful!',
    loginFailed: 'Login failed',
    userIdRequired: 'Please enter User ID!',
    passwordRequired: 'Please enter password!',
    accountPasswordError: 'Incorrect username or password',
    networkError: 'Login failed, please check network connection',
    welcome: 'Welcome to SS.AI Customer Service, {name}!',
    userIdLabel: 'User ID',
    logout: 'Logout',
    logoutSuccess: 'Logged out'
  },
  
  // Menu items
  menu: {
    dashboard: 'Dashboard',
    unsigned: 'Delivered and Unsigned',
    customerSigned: 'Customer Signed',
    signedPending: 'Signed Pending',
    logout: 'Logout',
    dashboardRecentActivity: 'Recent Activity',
    whatsappWorkflow: 'WhatsApp Workflow',
    companyUserAdmin: 'Company/User Admin',
    eformList: 'e-Form Management',
    whatsappTemplates: 'WhatsApp Message Templates',
    workflowMonitor: 'Workflow Instance Monitor', // 重新添加這個翻譯鍵
  },
  
  // Unsigned management
  unsigned: {
    title: 'Delivered and Unsigned',
    totalRecords: 'Total Records',
    totalProcessed: 'Total Processed',
    currentPageRecords: 'Current Page Records',
    search: 'Search',
    searchPlaceholder: 'Search invoice no, customer name, phone...',
    filterAll: 'All',
    filterUnconfirmed: 'Unconfirmed',
    filterConfirmed: 'Confirmed',
    confirm: 'Confirm',
    confirmSelected: 'Confirm Selected',
    confirmSuccess: 'Confirm Success',
    confirmFailed: 'Confirm Failed',
    downloadPdf: 'Download PDF',
    previewImage: 'Preview Image',
    customerTel: 'Customer Tel',
    invoiceNo: 'Invoice No',
    customerName: 'Customer Name',
    orderLines: 'Order Lines',
    noData: 'No Data',
    loading: 'Loading...',
    pageSize: 'Page Size',
    manualReview: 'Manual Review',
    customerSignedPending: 'Pending Review',
    customerSignedConfirmed: 'Confirmed',
    customerNo: 'Customer No',
    receiptDate: 'Receipt Date',
    uploadDate: 'Upload Date',
    remarks: 'Remarks',
    status: 'Status',
    action: 'Action',
    confirmed: 'Confirmed',
    unconfirmed: 'Unconfirmed',
  },
  
  // Workflow
  workflow: {
    title: 'Workflow Management',
    add: 'Add Workflow',
    name: 'Workflow Name',
    createdBy: 'Created By',
    createdAt: 'Created At',
    updatedAt: 'Last Modified',
    status: 'Status',
    action: 'Action',
    design: 'Design',
    copy: 'Copy',
    delete: 'Delete',
    confirmDeleteTitle: 'Are you sure to delete this workflow?',
    confirmDeleteContent: 'Workflow Name: {name}',
    confirmDeleteOk: 'Delete',
    confirmDeleteCancel: 'Cancel',
    copySuccess: 'Workflow copied',
    deleteSuccess: 'Workflow deleted',
    deleteFailed: 'Delete failed',
    copyFailed: 'Copy failed',
    save: 'Save Workflow',
    saveSuccess: 'Workflow saved!',
    saveFailed: 'Save failed',
    nameRequired: 'Please enter workflow name',
    mustHaveStartEnd: 'Workflow must contain Start and End node',
    mustHaveEdge: 'Please connect nodes',
    description: 'Description (optional)',
    back: 'Back to List',
    new: 'New Workflow',
    edit: 'Edit Workflow',
    searchPlaceholder: 'Search workflow name, creator...',
    search: 'Search',
    nodeTypes: 'Node Types',
    to: 'To',
    message: 'Message',
    timeout: 'Timeout',
    sql: 'SQL Query',
    apiUrl: 'API URL',
    formName: 'Form Name',
    result: 'Result',
    approved: 'Approved',
    rejected: 'Rejected',
    deleteEdge: 'Delete Edge',
    startNodeCannotEdit: 'Start node cannot be edited'
  },
  
  // Common
  common: {
    loading: 'Loading...',
    error: 'Error',
    success: 'Success',
    cancel: 'Cancel',
    confirm: 'Confirm',
    save: 'Save',
    delete: 'Delete',
    edit: 'Edit',
    add: 'Add',
    search: 'Search',
    refresh: 'Refresh',
    clear: 'Clear',
    submit: 'Submit',
    back: 'Back',
    next: 'Next',
    previous: 'Previous',
    close: 'Close',
    open: 'Open',
    yes: 'Yes',
    no: 'No',
    ok: 'OK'
  },
  
  // Language switch
  language: {
    zhTC: '繁體中文',
    zhSC: '简体中文', 
    en: 'English',
    language: 'Language'
  },
  companyUserAdmin: {
    companyName: "Company Name",
    email: "Email",
    address: "Address",
    phone: "Phone",
    website: "Website",
    createdAt: "Created At",
    updatedAt: "Updated At",
    action: "Action",
    edit: "Edit",
    delete: "Delete",
    name: "Name",
    account: "Account",
    isActive: "Active",
    isOwner: "Owner",
    active: "Active",
    inactive: "Inactive",
    owner: "Owner",
    addUser: "Add User",
    searchUser: "Search account, email, name...",
    batchEnable: "Batch Enable",
    batchDisable: "Batch Disable",
    timezone: "Timezone",
    language: "Language",
    addCompany: "Add Company"
  },
  companyEdit: {
    uploadLogo: "Click to upload company logo",
    basicInfo: "Company Basic Info",
    name: "Company Name",
    email: "Email",
    address: "Address",
    phone: "Phone",
    website: "Website",
    createdAt: "Created At",
    updatedAt: "Updated At",
    whatsappSetting: "WhatsApp Setting",
    waApiKey: "wA_API_Key",
    waPhoneNoId: "wA_PhoneNo_ID",
    waVerifyToken: "wA_VerifyToken",
    back: "Back",
    save: "Save"
  },
  
  // EForm related
  eform: {
    title: "E-Form Management",
    name: "Name",
    description: "Description",
    status: "Status",
    createdAt: "Created At",
    updatedAt: "Updated At",
    action: "Action",
    edit: "Edit",
    delete: "Delete",
    add: "Add Form",
    search: "Search",
    searchPlaceholder: "Search form name, description...",
    enabled: "Enabled",
    disabled: "Disabled",
    deleted: "Deleted",
    confirmDeleteTitle: "Are you sure to delete this form?",
    confirmDeleteContent: "This action cannot be undone",
    confirmDeleteOk: "Confirm",
    confirmDeleteCancel: "Cancel",
    deleteSuccess: "Delete successful",
    deleteFailed: "Delete failed",
    saveSuccess: "Save successful",
    saveFailed: "Save failed",
    batchDeleteTitle: "Batch Delete",
    batchDeleteContent: "Are you sure to delete {count} selected forms?",
    batchDeleteSuccess: "Batch delete successful",
    batchDeleteFailed: "Batch delete failed",
    batchEnableTitle: "Batch Enable",
    batchEnableContent: "Are you sure to enable {count} selected forms?",
    batchEnableSuccess: "Batch enable successful",
    batchDisableTitle: "Batch Disable",
    batchDisableContent: "Are you sure to disable {count} selected forms?",
    batchDisableSuccess: "Batch disable successful",
    noData: "No Data",
    loading: "Loading...",
    totalRecords: "Total Records",
    currentPageRecords: "Current Page Records",
    pleaseSelectForms: "Please select forms to operate",
    cannotGetCompanyInfo: "Cannot get user company information",
    updateFailed: "Update failed",
    createFailed: "Create failed",
    eformUpdateSuccess: "Form update successful",
    eformCreateSuccess: "Form create successful",
    batchEnable: "Batch Enable",
    batchDisable: "Batch Disable",
    batchDelete: "Batch Delete",
    refresh: "Refresh",
    eformManagement: "E-Form Management",
    searchNameDescription: "Search name, description...",
    clearFilter: "Clear Filter",
    pageRange: "Page ",
    total: " items, total ",
    batchDeleteForms: "Batch Delete Forms",
    cancel: "Cancel",
    confirmDelete: "Confirm Delete",
    forms: " forms",
    batchDeleteWarning: "Batch Delete Warning",
    batchDeleteWarningContent: "You are about to delete ",
    cannotBeUndone: " forms. This action cannot be undone. Please confirm the forms to delete.",
    pleaseConfirm: "Please confirm the forms to delete",
    batchEnableForms: "Batch Enable Forms",
    batchDisableForms: "Batch Disable Forms",
    confirm: "Confirm",
    enable: "Enable",
    disable: "Disable",
    batchStatusContent: "You are about to ",
    enableAfter: " forms. After enabling, forms will be available for use.",
    disableAfter: " forms. After disabling, forms will be unavailable but can be re-enabled.",
    unknownError: "Unknown error",
    batchStatusSuccess: "Successful",
    batchStatusFailed: "Batch operation failed",
    copy: "Copy",
    copyForm: "Copy Form",
    copyFormInfo: "Copy Form Information",
    copyFormContent: "You are about to copy the form",
    copyFormContent2: ". After copying, a new form copy will be created.",
    newFormName: "New Form Name",
    newFormDescription: "New Form Description",
    pleaseEnterFormName: "Please enter form name",
    formNameTooLong: "Form name cannot exceed 100 characters",
    enterNewFormName: "Please enter new form name",
    enterNewFormDescription: "Please enter new form description (optional)",
    copySuccess: "Copy successful",
    copyFailed: "Copy failed"
  },
  
  // EForm Designer related
  eformDesigner: {
    title: "Form Designer",
    formName: "Form Name",
    formDescription: "Form Description",
    save: "Save",
    back: "Back",
    preview: "Preview",
    code: "Code",
    form: "Form",
    edit: "Edit",
    upload: "Upload",
    generate: "Generate",
    toolbar: "Toolbar",
    collapse: "Collapse",
    expand: "Expand",
    wordUpload: "Word Document Upload",
    excelUpload: "Excel Document Upload",
    pdfUpload: "PDF Document Upload",
    imageUpload: "Image Upload",
    aiGenerate: "AI Generate Form",
    aiPrompt: "AI Prompt",
    includeCurrentHtml: "Include Current HTML",
    uploadSuccess: "Upload successful",
    uploadFailed: "Upload failed",
    generateSuccess: "Generate successful",
    generateFailed: "Generate failed",
    saveSuccess: "Save successful",
    saveFailed: "Save failed",
    nameRequired: "Please enter form name",
    descriptionRequired: "Please enter form description",
    welcomeMessage: "Welcome to Form Designer",
    welcomeDescription: "Please drag components from the left panel to start designing your form.",
    exampleInput: "Example Input",
    exampleInputPlaceholder: "Please enter...",
    dragComponentsHere: "Please drag components from the left panel to start designing your form.",
    newForm: "New Form",
    pleaseDragComponents: "Please drag components from the left panel to start designing your form.",
    exampleInputLabel: "Example Input",
    pleaseEnter: "Please enter...",
    grapesJsInitializationFailed: "GrapesJS editor initialization failed, please check console error messages",
    wordFileConvertedSuccess: "Word file converted successfully!",
    formCreatedFromWord: "Form created from Word",
    conversionFailed: "Conversion failed: ",
    unknownError: "Unknown error",
    requestTimeoutWordFileConversion: "Request timeout, Word file conversion takes a long time, please try again later or check network connection",
    requestTimeoutPleaseTryAgain: "Request timeout, please try again",
    uploadFailed: "Upload failed: ",
    excelFileConvertedSuccess: "Excel file converted successfully!",
    formCreatedFromExcel: "Form created from Excel",
    requestTimeoutExcelFileConversion: "Request timeout, Excel file conversion takes a long time, please try again later or check network connection",
    pdfFileConvertedSuccess: "PDF file converted successfully!",
    formCreatedFromPdf: "Form created from PDF",
    requestTimeoutPdfFileConversion: "Request timeout, PDF file conversion takes a long time, please try again later or check network connection",
    imageUploadSuccess: "Image uploaded successfully!",
    requestTimeoutImageUpload: "Request timeout, image upload takes a long time, please try again later or check network connection",
    pleaseEnterYourRequirements: "Please enter your requirements description",
    aiFormGeneratedSuccess: "AI form generated successfully!",
    aiGeneratedForm: "AI generated form",
    generationFailed: "Generation failed: ",
    requestTimeoutAiGeneration: "Request timeout, AI generation takes a long time, please try again later or check network connection",
    pleaseWriteFormContent: "Please write form content first",
    pleaseEnterFormName: "Please enter form name",
    formSavedSuccessfully: "Form saved successfully",
    formSavedToLocalStorage: "Form saved to local storage",
    saveFailed: "Save failed: ",
    expandToolbar: "Expand Toolbar",
    saving: "Saving...",
    saveDesign: "Save Design",
    aiGenerateForm: "AI Generate Form",
    createFromWordFile: "Create from Word File",
    createFromExcelFile: "Create from Excel File",
    createFromPdfFile: "Create from PDF File",
    uploadImage: "Upload Image",
    collapseToolbar: "Collapse Toolbar",
    createFormFromWordFile: "Create Form from Word File",
    wordFileConversion: "Word File Conversion",
    uploadWordFileDescription: "Upload Word files (.doc, .docx), the system will automatically convert to HTML format and load into the editor. Supports text, tables, images and other content.",
    converting: "Converting...",
    clickOrDragWordFileHere: "Click or drag Word file here",
    supportsDocAndDocxFormats: "Supports .doc and .docx formats, file size not exceeding 50MB",
    processingWordFile: "Processing Word file, please wait...",
    createFormFromExcelFile: "Create Form from Excel File",
    excelFileConversion: "Excel File Conversion",
    uploadExcelFileDescription: "Upload Excel files (.xls, .xlsx), the system will automatically convert to HTML format and load into the editor. Supports tables, charts and other content.",
    clickOrDragExcelFileHere: "Click or drag Excel file here",
    supportsXlsAndXlsxFormats: "Supports .xls and .xlsx formats, file size not exceeding 50MB",
    processingExcelFile: "Processing Excel file, please wait...",
    createFormFromPdfFile: "Create Form from PDF File",
    pdfFileConversion: "PDF File Conversion",
    uploadPdfFileDescription: "Upload PDF files (.pdf), the system will automatically convert to HTML format and load into the editor. Supports text, images and other content.",
    clickOrDragPdfFileHere: "Click or drag PDF file here",
    supportsPdfFormat: "Supports .pdf format, file size not exceeding 50MB",
    processingPdfFile: "Processing PDF file, please wait...",
    imageUpload: "Image Upload",
    uploadImageDescription: "Upload image files, the system will automatically insert images into the editor. Supports JPG, PNG, GIF and other formats.",
    uploading: "Uploading...",
    clickOrDragImageHere: "Click or drag image here",
    supportsJpgPngGifBmpWebpFormats: "Supports JPG, PNG, GIF, BMP, WebP formats, file size not exceeding 10MB",
    uploadingImage: "Uploading image, please wait...",
    aiSmartGeneration: "AI Smart Generation",
    describeTheFormTypeAndRequirements: "Describe the form type and requirements you need, AI will generate the corresponding HTML form for you. Suitable for approval processes, application forms, etc.",
    cancel: "Cancel",
    generating: "Generating...",
    generateForm: "Generate Form",
    requirementsDescription: "Requirements Description",
    exampleRequirementsDescription: "For example: I need a leave application form, including employee information, leave type, start date, end date, leave reason and other fields...",
    basedOnCurrentContentModified: "Will modify based on current content",
    generatingNewForm: "Will generate new form",
    aiWillModifyAndOptimizeBasedOnYourCurrentFormContent: "AI will modify and optimize based on your current form content. Current content length",
    characters: "characters",
    aiWillGenerateANewFormBasedOnYourDescription: "AI will generate a new form based on your description, without using the content in the current editor",
    aiGeneratingForm: "AI is generating form, please wait...",
    loadingGrapesJsEditor: "Loading GrapesJS editor...",
    editorType: "Editor Type",
    container: "Container",
    ready: "Ready",
    notReady: "Not Ready",
    pleaseTryAgainLaterOrCheckNetworkConnection: "Please try again later or check network connection"
  },
  
  // EForm Instance related
  eformInstance: {
    title: "Form Instance",
    status: "Status",
    submittedAt: "Submitted At",
    approvedAt: "Approved At",
    rejectedAt: "Rejected At",
    approvedBy: "Approved By",
    rejectedBy: "Rejected By",
    approvalNote: "Approval Note",
    rejectNote: "Reject Note",
    approve: "Approve",
    reject: "Reject",
    back: "Back",
    loading: "Loading...",
    error: "Error",
    noData: "No Data",
    pending: "Pending",
    approved: "Approved",
    rejected: "Rejected",
    confirmApprove: "Are you sure to approve this form?",
    confirmReject: "Are you sure to reject this form?",
    approveSuccess: "Approve successful",
    rejectSuccess: "Reject successful",
    approveFailed: "Approve failed",
    rejectFailed: "Reject failed",
    noteRequired: "Please enter note",
    loginRequired: "Please login first",
    loginExpired: "Login expired, please login again",
    fetchFailed: "Failed to fetch form instance",
    formApproved: "Form approved",
    formRejected: "Form rejected",
    pendingApproval: "Pending Approval",
    formInstanceNotFound: "Form instance not found",
    formInfo: "Form Information",
    instanceName: "Instance Name",
    createdAt: "Created At",
    userInput: "User Input",
    approver: "Approver",
    approvalTime: "Approval Time",
    formContent: "Form Content",
    approveForm: "Approve Form",
    cancel: "Cancel",
    confirmApprove: "Confirm Approve",
    confirmApproveForm: "Are you sure to approve this form?",
    approvalNotePlaceholder: "Approval note (optional)",
    rejectForm: "Reject Form",
    confirmReject: "Confirm Reject",
    confirmRejectForm: "Are you sure to reject this form?",
    rejectReasonPlaceholder: "Reject reason (optional)"
  },
  
  // WhatsApp Template related
  whatsappTemplate: {
    title: 'WhatsApp Message Templates',
    add: 'Add Template',
    addTitle: 'Add New Template',
    editTitle: 'Edit Template',
    name: 'Template Name',
    nameRequired: 'Template name is required',
    namePlaceholder: 'Enter template name',
    description: 'Description',
    descriptionPlaceholder: 'Enter template description',
    category: 'Category',
    categoryRequired: 'Category is required',
    categoryPlaceholder: 'Select category',
    type: 'Type',
    typeRequired: 'Type is required',
    typePlaceholder: 'Select template type',
    status: 'Status',
    statusRequired: 'Status is required',
    statusPlaceholder: 'Select status',
    language: 'Language',
    languageRequired: 'Language is required',
    languagePlaceholder: 'Select language',
    
    // Categories
    welcome: 'Welcome',
    order: 'Order',
    marketing: 'Marketing',
    support: 'Support',
    general: 'General',
    
    // Types
    text: 'Text',
    media: 'Media',
    interactive: 'Interactive',
    location: 'Location',
    contact: 'Contact',
    
    // Status
    enabled: 'Enabled',
    disabled: 'Disabled',
    draft: 'Draft',
    
    // Languages
    traditionalChinese: 'Traditional Chinese',
    simplifiedChinese: 'Simplified Chinese',
    english: 'English',
    
    // Actions
    save: 'Save',
    cancel: 'Cancel',
    edit: 'Edit',
    delete: 'Delete',
    copy: 'Copy',
    preview: 'Preview',
    confirm: 'Confirm',
    confirmDelete: 'Confirm Delete',
    
    // Messages
    templateCreateSuccess: 'Template created successfully',
    templateUpdateSuccess: 'Template updated successfully',
    templateDeleteSuccess: 'Template deleted successfully',
    templateCreateFailed: 'Failed to create template',
    templateUpdateFailed: 'Failed to update template',
    templateDeleteFailed: 'Failed to delete template',
    templateSaveFailed: 'Failed to save template',
    templateGetTemplateListFailed: 'Failed to get template list',
    templateDeleteConfirm: 'Are you sure you want to delete this template?',
    templateDeleteConfirmLocal: 'Are you sure you want to delete this local template?',
    templatePleaseSelectTemplates: 'Please select templates to delete',
    templateSuccessDelete: 'Successfully deleted',
    templateTemplates: 'templates',
    templateConfirmDeleteSelected: 'Are you sure you want to delete the selected',
    templateConfirmDeleteSelectedSuffix: 'templates?',
    templateParseContentFailed: 'Failed to parse template content',
    templateCopySuccess: 'Template copied successfully',
    templateCopyFailed: 'Failed to copy template',
    templateCopying: 'Copying template...',
    
    // Meta Templates
    importFromMeta: 'Import from Meta',
    refreshMetaTemplates: 'Refresh Meta Templates',
    templateGetMetaTemplatesFailed: 'Failed to get Meta templates',
    templateImportSuccess: 'Template imported successfully',
    templateImportFailed: 'Failed to import template',
    templateCreateMetaTemplateSuccess: 'Meta template created successfully',
    templateDeleteMetaTemplateSuccess: 'Meta template deleted successfully',
    templateDeleteMetaTemplate: 'Delete Meta Template',
    import: 'Import',
    
    // Search and Filters
    searchPlaceholder: 'Search template name, description...',
    categorySelect: 'Select Category',
    statusSelect: 'Select Status',
    
    // Table Headers
    templateName: 'Template Name',
    templateLanguage: 'Language',
    templateVersion: 'Version',
    updatedAt: 'Updated At',
    action: 'Actions',
    
    // Batch Operations
    batchDeleteTitle: 'Batch Delete Templates',
    
    // Form Fields
    messageContent: 'Message Content',
    mediaType: 'Media Type',
    mediaUrl: 'Media File URL',
    mediaCaption: 'Media Caption',
    interactiveType: 'Interactive Type',
    header: 'Header',
    body: 'Body',
    footer: 'Footer',
    latitude: 'Latitude',
    longitude: 'Longitude',
    locationName: 'Location Name',
    locationAddress: 'Address',
    contactName: 'Contact Name',
    contactPhone: 'Contact Phone',
    contactEmail: 'Contact Email',
    
    // Media Types
    image: 'Image',
    video: 'Video',
    audio: 'Audio',
    document: 'Document',
    
    // Interactive Types
    button: 'Button',
    list: 'List',
    product: 'Product',
    
    // Variables
    variableSettings: 'Variable Settings',
    addVariable: 'Add Variable',
    variableName: 'Variable Name',
    variableType: 'Type',
    variableDescription: 'Description',
    required: 'Required',
    string: 'Text',
    number: 'Number',
    date: 'Date',
    
    // Preview
    basicInfo: 'Basic Information',
    content: 'Content',
    variableDefinition: 'Variable Definition',
    
    // Validation Messages
    pleaseEnterMessageContent: 'Please enter message content',
    pleaseEnterMessageContentWithVariables: 'Please enter message content, you can use {{variable_name}} format to insert variables',
    pleaseSelectMediaType: 'Please select media type',
    pleaseEnterMediaFileUrl: 'Please enter media file URL',
    pleaseEnterMediaCaption: 'Please enter media caption (optional)',
    pleaseSelectInteractiveType: 'Please select interactive type',
    pleaseEnterHeader: 'Please enter header (optional)',
    pleaseEnterBody: 'Please enter body content',
    pleaseEnterFooter: 'Please enter footer text (optional)',
    pleaseEnterLatitude: 'Please enter latitude',
    pleaseEnterLongitude: 'Please enter longitude',
    pleaseEnterLocationName: 'Please enter location name',
    pleaseEnterAddress: 'Please enter complete address',
    pleaseEnterContactName: 'Please enter contact name',
    pleaseEnterContactPhone: 'Please enter contact phone',
    pleaseEnterContactEmail: 'Please enter contact email (optional)',
    
    // Map related translations
    mapSelection: 'Map Selection',
    searchAddressOrDragMarker: 'Search for an address or drag the marker to a suitable location',
    enterAddressToSearch: 'Enter address or place name to search',
    search: 'Search',
    getCurrentLocation: 'Get Current Location',
    advancedSearch: 'Advanced Search',
    
    // Variables
    variables: 'Variable Settings',
    addVariable: 'Add Variable',
    variableName: 'Variable Name',
    variableType: 'Type',
    variableDescription: 'Description',
    required: 'Required',
    string: 'Text',
    number: 'Number',
    date: 'Date',
    
    // Search and location
    searchAddress: 'Search Address',
    selectThisLocation: 'Select This Location',
  },
  
  // EForm Designer
  eformDesigner: {
    title: 'Form Designer',
    formInfo: 'Form Information',
    formName: 'Form Name',
    formDescription: 'Form Description',
    formNamePlaceholder: 'Please enter form name',
    formDescriptionPlaceholder: 'Please enter form description',
    uploadFile: 'File Upload',
    createFromWordFile: 'Create from Word file',
    createFromExcelFile: 'Create from Excel file',
    createFromPdfFile: 'Create from PDF file',
    uploadImage: 'Upload image',
    aiGenerate: 'AI Generate',
    aiGenerateForm: 'AI Generate Form',
    welcomeMessage: 'Welcome to Form Designer',
    pleaseDragComponents: 'Please drag components here to start designing your form',
    exampleInputLabel: 'Example Input Field',
    pleaseEnter: 'Please enter content',
    newForm: 'New Form',
    saveForm: 'Save Form',
    formSaved: 'Form saved',
    saveFailed: 'Save failed',
    grapesJsInitializationFailed: 'GrapesJS initialization failed',
    uploadWord: 'Upload Word Document',
    uploadExcel: 'Upload Excel File',
    uploadPdf: 'Upload PDF File',
    uploadImage: 'Upload Image',
    aiGenerate: 'AI Generate Form',
    aiPrompt: 'Please describe the form you want',
    generating: 'Generating...',
    generationFailed: 'Generation failed',
    wordUploadSuccess: 'Word document converted successfully',
    excelUploadSuccess: 'Excel file converted successfully',
    pdfUploadSuccess: 'PDF file converted successfully',
    imageUploadSuccess: 'Image uploaded successfully',
    uploadFailed: 'Upload failed',
    fileTooLarge: 'File too large',
    unsupportedFormat: 'Unsupported format',
    includeCurrentHtml: 'Include current HTML content',
    toolbarCollapse: 'Collapse toolbar',
    toolbarExpand: 'Expand toolbar',
    viewCode: 'View code',
    viewPreview: 'Preview',
    backToList: 'Back to list',
    wordFileConvertedSuccess: 'Word file converted successfully',
    excelFileConvertedSuccess: 'Excel file converted successfully',
    pdfFileConvertedSuccess: 'PDF file converted successfully',
    conversionFailed: 'Conversion failed',
    unknownError: 'Unknown error',
    requestTimeoutWordFileConversion: 'Word file conversion request timeout',
    requestTimeoutExcelFileConversion: 'Excel file conversion request timeout',
    requestTimeoutPdfFileConversion: 'PDF file conversion request timeout',
    requestTimeoutImageUpload: 'Image upload request timeout',
    requestTimeoutAiGeneration: 'AI generation request timeout',
    requestTimeoutPleaseTryAgain: 'Request timeout, please try again',
    pleaseTryAgainLaterOrCheckNetworkConnection: ', please try again later or check network connection',
    pleaseEnterYourRequirements: 'Please enter your requirements',
    aiFormGeneratedSuccess: 'AI form generated successfully',
    aiGeneratedForm: 'AI Generated Form',
    pleaseWriteFormContent: 'Please write form content',
    pleaseEnterFormName: 'Please enter form name',
    formSavedSuccessfully: 'Form saved successfully',
    formSavedToLocalStorage: 'Form saved to local storage',
    saveFailed: 'Save failed',
    expandToolbar: 'Expand toolbar',
    back: 'Back',
    saving: 'Saving...',
    saveDesign: 'Save design',
    aiGenerateForm: 'AI Generate Form',
    createFromWordFile: 'Create from Word file',
    createFromExcelFile: 'Create from Excel file',
    createFromPdfFile: 'Create from PDF file',
    createFromImageFile: 'Create from image',
    viewDesign: 'View design',
    viewCode: 'View code',
    formName: 'Form name',
    formDescription: 'Form description',
    formNamePlaceholder: 'Please enter form name',
    formDescriptionPlaceholder: 'Please enter form description (optional)',
    uploadFile: 'Upload file',
    dragAndDropOrClick: 'Drag and drop file here or click to upload',
    selectFile: 'Select file',
    upload: 'Upload',
    cancel: 'Cancel',
    close: 'Close',
    generate: 'Generate',
    promptPlaceholder: 'Please describe the form you want, e.g.: a contact form with name, phone, and address',
    includeCurrentContent: 'Include current content',
    yes: 'Yes',
    no: 'No',
    loading: 'Loading...',
    error: 'Error',
    success: 'Success',
    warning: 'Warning',
    info: 'Info',
    
    // GrapesJS Editor Interface Elements
    grapesJs: {
      // Left Blocks Panel
      blocks: 'Blocks',
      layout: 'Layout',
      basic: 'Basic',
      forms: 'Forms',
      section: 'Section',
      div: 'Div',
      container: 'Container',
      text: 'Text',
      heading: 'Heading',
      paragraph: 'Paragraph',
      form: 'Form',
      input: 'Input',
      button: 'Button',
      textarea: 'Textarea',
      select: 'Select',
      radio: 'Radio',
      checkbox: 'Checkbox',
      fileUpload: 'File Upload',
      email: 'Email',
      password: 'Password',
      number: 'Number',
      date: 'Date',
      time: 'Time',
      url: 'URL',
      tel: 'Phone',
      label: 'Label',
      fieldset: 'Fieldset',
      
      // Right Panels
      layers: 'Layers',
      styles: 'Styles',
      traits: 'Traits',
      settings: 'Settings',
      
      // Toolbar
      viewCode: 'View Code',
      preview: 'Preview',
      fullscreen: 'Fullscreen',
      undo: 'Undo',
      redo: 'Redo',
      clear: 'Clear',
      export: 'Export',
      import: 'Import',
      
      // Properties Panel
      id: 'ID',
      class: 'CSS Class',
      style: 'Style',
      attributes: 'Attributes',
      content: 'Content',
      placeholder: 'Placeholder',
      required: 'Required',
      disabled: 'Disabled',
      readonly: 'Readonly',
      maxlength: 'Max Length',
      minlength: 'Min Length',
      pattern: 'Pattern',
      title: 'Title',
      alt: 'Alt Text',
      src: 'Source',
      href: 'Link',
      target: 'Target',
      rel: 'Rel',
      
      // Styles Panel
      dimensions: 'Dimensions',
      positioning: 'Positioning',
      typography: 'Typography',
      background: 'Background',
      border: 'Border',
      effects: 'Effects',
      extra: 'Extra',
      
      // Common
      width: 'Width',
      height: 'Height',
      margin: 'Margin',
      padding: 'Padding',
      borderWidth: 'Border Width',
      borderStyle: 'Border Style',
      borderColor: 'Border Color',
      borderRadius: 'Border Radius',
      backgroundColor: 'Background Color',
      color: 'Color',
      fontSize: 'Font Size',
      fontWeight: 'Font Weight',
      fontFamily: 'Font Family',
      textAlign: 'Text Align',
      lineHeight: 'Line Height',
      letterSpacing: 'Letter Spacing',
      textDecoration: 'Text Decoration',
      opacity: 'Opacity',
      boxShadow: 'Box Shadow',
      transform: 'Transform',
      
      // Tooltips
      dragToAdd: 'Drag to add',
      clickToEdit: 'Click to edit',
      doubleClickToEdit: 'Double click to edit',
      selectComponent: 'Select component',
      deleteComponent: 'Delete component',
      copyComponent: 'Copy component',
      pasteComponent: 'Paste component',
      moveUp: 'Move up',
      moveDown: 'Move down',
      moveLeft: 'Move left',
      moveRight: 'Move right',
      
      // Edit Tips
      editTip: 'Please click the edit button above the component to modify this input field properties.',
      deselectTip: 'Press ESC key or click on blank area to deselect',
      
      // Device Views
      device: 'Device',
      desktop: 'Desktop',
      tablet: 'Tablet',
      mobileLandscape: 'Mobile Landscape',
      mobilePortrait: 'Mobile Portrait',
      
      // Toolbar Tooltips
      viewComponents: 'View components',
      preview: 'Preview',
      fullscreen: 'Fullscreen',
      viewCode: 'View code',
      
      // Styles Panel Details
      classes: 'Classes',
      general: 'General',
      display: 'Display',
      float: 'Float',
      position: 'Position',
      top: 'Top',
      right: 'Right',
      left: 'Left',
      bottom: 'Bottom',
      none: 'None',
      block: 'Block',
      inline: 'Inline',
      inlineBlock: 'Inline Block',
      flex: 'Flex',
      grid: 'Grid',
      static: 'Static',
      relative: 'Relative',
      absolute: 'Absolute',
      fixed: 'Fixed',
      auto: 'Auto',
      
      // States and Selection
      state: 'State',
      selected: 'Selected',
      componentSet: 'Component set',
      
      // Other UI Elements
      add: 'Add',
      remove: 'Remove',
      close: 'Close',
      open: 'Open',
      expand: 'Expand',
      collapse: 'Collapse',
      refresh: 'Refresh',
      loading: 'Loading...',
      error: 'Error',
      success: 'Success',
      warning: 'Warning',
      info: 'Info'
    }
  },
  
  // WhatsApp Workflow Designer
  workflowDesigner: {
    title: 'Workflow Designer',
    workflowInfo: 'Workflow Information',
    workflowName: 'Workflow Name',
    workflowDescription: 'Workflow Description',
    workflowNamePlaceholder: 'Please enter workflow name',
    workflowDescriptionPlaceholder: 'Please enter workflow description',
    nodeTypes: 'Node Types',
    loadingNodeTypes: 'Loading node types...',
    nodeConfiguration: 'Node Configuration',
    connection: 'Connection',
    node: 'Node',
    flow: 'Flow',
    startNode: 'Start Node',
    endNode: 'End Node',
    waitReplyNode: 'Wait Reply Node',
    sendMessageNode: 'Send Message Node',
    conditionNode: 'Condition Node',
    formNode: 'Form Node',
    webhookNode: 'Webhook Node',
    taskName: 'Task Name',
    taskNamePlaceholder: 'Please enter task name',
    description: 'Description',
    descriptionPlaceholder: 'Please enter description (optional)',
    assignTo: 'Assign To',
    assignToPlaceholder: 'Please select assignee',
    messageContent: 'Message Content',
    messageContentPlaceholder: 'Please enter message content',
    condition: 'Condition',
    conditionPlaceholder: 'Please enter condition',
    formSelection: 'Form Selection',
    formSelectionPlaceholder: 'Please select form',
    webhookUrl: 'Webhook URL',
    webhookUrlPlaceholder: 'Please enter webhook URL',
    save: 'Save',
    saveSuccess: 'Workflow saved!',
    saveFailed: 'Save failed',
    validationErrors: 'Validation Errors',
    validationWarnings: 'Validation Warnings',
    mustHaveStartEnd: 'Workflow must contain start and end nodes',
    mustHaveConnection: 'Please establish node connections',
    hasCycle: 'Cycle detected',
    isolatedNode: 'Isolated node detected',
    startNodeNoOutput: 'Start node has no output connection',
    endNodeNoInput: 'End node has no input connection',
    cannotConnectToSelf: 'Cannot connect node to itself',
    connectionAlreadyExists: 'Connection already exists between nodes',
    workflowValidationFailed: 'Workflow validation failed',
    workflowValidationWarning: 'Workflow validation warning',
    continueSave: 'Continue to save?',
    back: 'Back',
    design: 'Design',
    copy: 'Copy',
    delete: 'Delete',
    confirmDelete: 'Are you sure to delete this workflow?',
    copySuccess: 'Workflow copied',
    deleteSuccess: 'Workflow deleted',
    deleteFailed: 'Delete failed',
    copyFailed: 'Copy failed',
    nameRequired: 'Please enter workflow name',
    descriptionRequired: 'Please enter workflow description',
    // Node type descriptions
    nodeDescriptions: {
      start: 'Starting point of the workflow, only one allowed',
      end: 'Ending point of the workflow, multiple allowed',
      waitReply: 'Node that waits for user reply',
      sendMessage: 'Node that sends message to user',
      condition: 'Node that decides flow direction based on conditions',
      form: 'Node that displays form for user to fill',
      webhook: 'Node that calls external API'
    },
    // Node configuration descriptions
    nodeConfigDescriptions: {
      waitReply: '1. Workflow pauses at this node waiting for user reply\n2. Only specified user reply will continue the workflow',
      sendMessage: '1. Send message to user\n2. Can include text, images, files, etc.\n3. Supports variable replacement',
      condition: '1. Decide next step based on conditions\n2. Supports multiple branches\n3. Can judge based on user input, time, etc.',
      form: '1. Display form for user to fill\n2. Supports various form types\n3. Form submission triggers subsequent workflow',
      webhook: '1. Call external API\n2. Can send data to other systems\n3. Decide flow direction based on API response'
    },
    // Workflow initiator options
    initiatorOptions: {
      initiator: 'Workflow Initiator',
      anyUser: 'Any User',
      specificUser: 'Specific User'
    }
  },

  // Workflow Instance Monitor
  workflowMonitor: {
    title: 'Workflow Instance Monitor',
    overview: 'Overview',
    activeInstances: 'Active Instances',
    completedInstances: 'Completed Instances',
    failedInstances: 'Failed Instances',
    totalInstances: 'Total Instances',
    runningInstances: 'Running Instances',
    waitingInstances: 'Waiting Instances',
    errorInstances: 'Error Instances',
    
    // Instance list
    instanceList: 'Instance List',
    workflowName: 'Workflow Name',
    instanceId: 'Instance ID',
    status: 'Status',
    currentStep: 'Current Step',
    startTime: 'Start Time',
    executionTime: 'Execution Time',
    creator: 'Creator',
    actions: 'Actions',
    
    // Status filters
    filterAll: 'All Status',
    filterRunning: 'Running',
    filterCompleted: 'Completed',
    filterFailed: 'Failed',
    filterWaiting: 'Waiting',
    
    // Actions
    viewDetails: 'View Details',
    pause: 'Pause',
    resume: 'Resume',
    cancel: 'Cancel',
    retry: 'Retry',
    
    // Status tags
    statusRunning: 'Running',
    statusCompleted: 'Completed',
    statusFailed: 'Failed',
    statusWaiting: 'Waiting',
    statusPaused: 'Paused',
    statusCancelled: 'Cancelled',
    
    // Instance details
    basicInfo: 'Basic Information',
    executionHistory: 'Execution History',
    formInstances: 'Form Instances',
    
    // Form instance status
    formStatusPending: 'Pending',
    formStatusApproved: 'Approved',
    formStatusRejected: 'Rejected',
    
    // Messages
    noFormInstances: 'No form instances',
    loadingFormInstances: 'Loading form instances...',
    viewFormDetails: 'View Form Details',
    
    // Statistics
    totalCount: 'Total Count',
    runningCount: 'Running Count',
    completedCount: 'Completed Count',
    successRate: 'Success Rate',
    averageExecutionTime: 'Average Execution Time',
    
    // Errors
    loadInstancesFailed: 'Failed to load instances',
    loadStatisticsFailed: 'Failed to load statistics',
    loadDetailsFailed: 'Failed to load details',
    loadFormInstancesFailed: 'Failed to load form instances',
    apiEndpointNotImplemented: 'API endpoint not implemented, please contact developers',
    
    // Refresh
    refresh: 'Refresh',
    autoRefresh: 'Auto Refresh',
    refreshInterval: 'Refresh Interval (seconds)',
    
    // Search and filters
    searchPlaceholder: 'Search workflow name, instance ID...',
    dateRangePlaceholder: ['Start Date', 'End Date'],
    statusFilterPlaceholder: 'Select Status',
    
    // Pagination
    paginationTotal: 'Total {total} items',
    paginationRange: 'Items {start}-{end} of {total}',
    
    // Time formats
    timeFormat: 'YYYY-MM-DD HH:mm:ss',
    durationMinutes: '{minutes} minutes',
    durationHours: '{hours} hours {minutes} minutes',
    
    // Modal titles
    instanceDetails: 'Instance Details',
    workflowInstance: 'Workflow Instance',
    
    // Descriptions
    instanceIdLabel: 'Instance ID',
    workflowNameLabel: 'Workflow Name',
    statusLabel: 'Status',
    currentStepLabel: 'Current Step',
    startTimeLabel: 'Start Time',
    endTimeLabel: 'End Time',
    executionTimeLabel: 'Execution Time',
    creatorLabel: 'Creator',
    errorMessageLabel: 'Error Message',
    
    // Timeline
    workflowStarted: 'Workflow Started',
    stepExecution: 'Step Execution',
    workflowCompleted: 'Workflow Completed',
    noStepRecords: 'No step execution records',
    stepName: 'Step {index}',
    stepStatus: 'Status',
    stepStartTime: 'Start Time',
    stepEndTime: 'End Time',
    stepError: 'Error',
    
    // Form instance details
    formName: 'Form Name',
    instanceName: 'Instance Name',
    formStatus: 'Status',
    createdAt: 'Created At',
    userMessage: 'User Input',
    approvalBy: 'Approved By',
    approvalAt: 'Approval Time',
    approvalNote: 'Approval Note',
    unnamedForm: 'Unnamed Form',
    
    // Buttons
    viewDetailsButton: 'View Details',
    closeButton: 'Close',
    
    // Alerts
    errorInfo: 'Error Information',
    noData: 'No Data',
    
    // Tooltips
    tooltipViewDetails: 'View Details',
    tooltipPause: 'Pause',
    tooltipResume: 'Resume',
    tooltipCancel: 'Cancel',
    tooltipRetry: 'Retry',
    tooltipAutoRefresh: 'Auto Refresh Settings',
  }
};

export default en; 