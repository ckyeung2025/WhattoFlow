const en = {
  // Login related
  login: {
    title: 'SS.AI Customer Service',
    platformTitle: 'AI WhatsApp Workflow Platform',
    userId: 'User ID',
    password: 'Password',
    loginButton: 'Login',
    loginSuccess: 'Login successful!',
    loginFailed: 'Login failed',
    userIdRequired: 'Please enter User ID!',
    passwordRequired: 'Please enter password!',
    accountPasswordError: 'Incorrect account or password',
    networkError: 'Login failed, please check network connection',
    welcome: 'Welcome to SS.AI Customer Service, {name}!',
    userIdLabel: 'User ID',
    logout: 'Logout',
    logoutSuccess: 'Logged out'
  },
  
  // Menu items
  menu: {
    dashboard: 'Dashboard',
    application: 'Application',
    publishedApps: 'Published Apps',
    pendingTasks: 'Running Forms',
    adminTools: 'Admin Tools',
    contactList: 'Contact Management',
    broadcastGroups: 'Broadcast Groups',
    hashtags: 'Tag Management',
    studio: 'Studio',
    unsigned: 'Delivered Not Signed',
    customerSigned: 'Customer Signed',
    signedPending: 'Signed Pending Confirmation',
    logout: 'Logout',
    dashboardRecentActivity: 'Recent Activity',
    whatsappWorkflow: 'Workflow Design',
    companyUserAdmin: 'Company/User Management',
    eformList: 'Form Management',
    whatsappTemplates: 'Message Templates',
    workflowMonitor: 'Workflow Monitor',
    runningApps: 'Running Apps',
  },

  // Dashboard
  dashboard: {
    applicationTitle: 'Application',
    applicationDescription: 'Published workflow applications ready to launch',
    studioTitle: 'Studio',
    studioDescription: 'Management and design tools to build your custom workflows',
    adminToolsTitle: 'Admin Tools',
    adminToolsDescription: 'System management and user administration tools',
    contactManagement: 'Contact Management',
    contactManagementDescription: 'Manage WhatsApp contact information',
    broadcastGroups: 'Broadcast Groups',
    broadcastGroupsDescription: 'Manage broadcast groups and members',
    hashtagManagement: 'Hashtag Management',
    hashtagManagementDescription: 'Manage system tags and categories',
    companyUserManagement: 'Company/User Management',
    companyUserManagementDescription: 'Manage company accounts and user permissions',
    totalContacts: 'Total Contacts',
    totalGroups: 'Total Groups',
    totalMembers: 'Total Members',
    totalHashtags: 'Total Hashtags',
    hashtagUsage: 'Usage Count',
    totalUsers: 'Total Users',
    admins: 'Admins',
    totalCompanies: 'Total Companies',
    publishedApps: 'Published Apps',
    publishedAppsDescription: 'Available workflow applications',
    runningApps: 'Running Apps',
    runningAppsDescription: 'Currently executing workflow instances',
    pendingTasks: 'Pending Tasks',
    pendingTasksDescription: 'Approvals and responses requiring your attention',
    formManagement: 'Form Management',
    formManagementDescription: 'Electronic form design and management',
    messageTemplates: 'Message Templates',
    messageTemplatesDescription: 'WhatsApp message template management',
    workflowDesign: 'Workflow Design',
    workflowDesignDescription: 'Design and configure workflows',
    datasetManagement: 'Dataset Management',
    datasetManagementDescription: 'Data source and dataset management',
    userManagement: 'User Management',
    userManagementDescription: 'Company user and permission management',
    systemMonitoring: 'System Monitoring',
    systemMonitoringDescription: 'Workflow execution monitoring and analysis',
    workflowMonitor: 'Workflow Monitor',
    workflowMonitorDescription: 'Workflow execution monitoring and analysis',
    totalCount: 'Total',
    recentlyAdded: 'Recently Added',
    loading: 'Loading...',
    loadingDashboard: 'Loading Dashboard...',
    active: 'Active',
    draft: 'Draft',
    disabled: 'Disabled',
    running: 'Running',
    completed: 'Completed',
    failed: 'Failed',
    pendingApproval: 'Pending Approval',
    processed: 'Processed',
    today: 'Today',
    enabled: 'Enabled',
    inactive: 'Inactive',
    published: 'Published',
    test: 'Test',
    totalDatasets: 'Total Datasets',
    error: 'Error',
    totalUsers: 'Total Users',
    online: 'Online',
    admin: 'Admin',
    successRate: 'Success Rate',
    averageTime: 'Average Time',
    minutes: 'min',
    // 數據分析相關
    dataAnalysis: 'Data Analysis',
    dataAnalysisDescription: 'Real-time system operation data overview',
    messageTrend: 'Message Trend',
    hotWorkflows: 'Hot Workflows',
    formStatus: 'Form Status',
    systemHealth: 'System Health',
    messageSuccessRate: 'Message Success Rate',
    workflowSuccessRate: 'Workflow Success Rate',
    avgExecutionTime: 'Avg Execution Time',
    pendingTasksCount: 'Pending Tasks',
    seconds: 'sec',
    past7Days: 'Past 7 Days',
    executionCount: 'Execution Count',
    pending: 'Pending',
    approved: 'Approved',
    rejected: 'Rejected'
  },

  // Pending Tasks Page
  pendingTasks: {
    title: 'Pending Tasks',
    description: 'Handle form applications awaiting approval',
    totalPending: 'Total Pending',
    pendingApproval: 'Pending Approval',
    overdueItems: 'Overdue Items',
    urgentItems: 'Urgent Items',
    formName: 'Form Name',
    status: 'Status',
    fillType: 'Fill Type',
    priority: 'Priority',
    applicant: 'Applicant',
    applicationTime: 'Application Time',
    dueDate: 'Due Date',
    action: 'Action',
    approve: 'Approve',
    reject: 'Reject',
    approveTooltip: 'Approve',
    rejectTooltip: 'Reject',
    submitForm: 'Submit Form',
    submitFormTooltip: 'Submit Form',
    submitFormMessage: 'Form submission feature is under development...',
    formOpenedForSubmission: 'Form opened in new tab, please fill and submit',
    resubmitForm: 'Resubmit',
    searchPlaceholder: 'Search form name, applicant...',
    priorityPlaceholder: 'Priority',
    all: 'All',
    high: 'High',
    medium: 'Medium',
    low: 'Low',
    manualFill: 'Manual Fill',
    aiFill: 'AI Fill',
    dataFill: 'Data Fill',
    aiDataFill: 'AI/Data Fill',
    inhouseForm: 'In-house Form',
    inhouseFormDescription: 'Authenticated phone numbers or login operations<br/>e.g.: Internal system operations',
    publicForm: 'Public Form',
    publicFormDescription: 'General phone numbers, no login required<br/>e.g.: Promotions, feedback collection',
    manualPendingForms: 'Pending Response Forms',
    manualRespondedForms: 'Responded Forms',
    noManualPendingForms: 'No pending manual fill forms',
    noManualRespondedForms: 'No responded manual fill forms',
    overdue: 'Overdue',
    pending: 'Pending',
    approved: 'Approved',
    rejected: 'Rejected',
    submitted: 'Submitted',
    changeToApproved: 'Change to Approved',
    changeToRejected: 'Change to Rejected',
    statusChangeConfirmation: 'Status Change Confirmation',
    statusChangeWarning: 'Status Change Warning',
    currentStatus: 'Current Status',
    decidedBy: 'Decided By',
    decidedAt: 'Decided At',
    changeTo: 'Change To',
    confirmStatusChange: 'Confirm Change',
    confirmStatusChangeQuestion: 'Are you sure you want to change the status of this form?',
    noPendingTasks: 'No pending tasks',
    approveApplication: 'Approve Application',
    rejectApplication: 'Reject Application',
    confirmApprove: 'Confirm Approve',
    confirmReject: 'Confirm Reject',
    cancel: 'Cancel',
    confirmApproval: 'Confirm Approval',
    confirmRejection: 'Confirm Rejection',
    applicantLabel: 'Applicant:',
    applicationTimeLabel: 'Application Time:',
    approvalNote: 'Approval Note',
    approvalNotePlaceholder: 'Please enter approval note (optional)',
    rejectionReason: 'Rejection Reason',
    rejectionReasonPlaceholder: 'Please enter rejection reason (required)',
    operationSuccess: 'Operation successful',
    operationFailed: 'Operation failed',
    approveSuccess: 'Approval successful',
    rejectSuccess: 'Rejection successful',
    approveFailed: 'Approval failed',
    rejectFailed: 'Rejection failed',
    loadPendingTasksFailed: 'Failed to load pending tasks',
    loadStatisticsFailed: 'Failed to load statistics',
    refresh: 'Refresh',
    pendingTasksList: 'Pending Forms',
    pendingForms: 'Pending Forms',
    approvedForms: 'Approved Forms',
    rejectedForms: 'Rejected Forms',
    approvedBy: 'Approved',
    rejectedBy: 'Rejected',
    noApprovedForms: 'No approved forms',
    noRejectedForms: 'No rejected forms',
    pageRange: 'Items {start}-{end} of {total}',
    itemsPerPage: '/ page',
    jumpTo: 'Go to',
    page: 'Page',
    confirm: 'OK',
    loading: 'Loading...',
    error: 'Error',
    success: 'Success',
    viewFormInstance: 'View Form Instance',
    loadingFormInstance: 'Loading form instance...',
    close: 'Close',
    openInNewTab: 'Open in new tab',
    noFormData: 'No form data',
    userMessage: 'User Message',
    
    // Batch processing translations
    select: 'Select',
    selectAll: 'Select All',
    deselectAll: 'Deselect All',
    selectedItems: '{count} items selected',
    clearSelection: 'Clear Selection',
    batchApprove: 'Batch Approve',
    batchReject: 'Batch Reject',
    batchChangeToApproved: 'Batch Change to Approved',
    batchChangeToRejected: 'Batch Change to Rejected',
    batchOperationConfirmation: 'Batch Operation Confirmation',
    batchOperationType: 'Operation Type',
    selectedFormsCount: 'Selected Forms Count',
    formsList: 'Forms List',
    confirmBatchOperation: 'Confirm to execute this batch operation?',
    operationNote: 'Operation Note',
    operationNotePlaceholder: 'Please enter operation reason...',
    confirmExecute: 'Confirm Execute',
    batchOperationSuccess: 'Batch operation successful',
    batchOperationFailed: 'Batch operation failed',
    batchApprovalSuccess: 'Successfully approved {count} forms',
    batchRejectionSuccess: 'Successfully rejected {count} forms',
    batchStatusChangeSuccess: 'Successfully changed {count} forms status'
  },
  
  // Unsigned management
  unsigned: {
    title: 'Delivered Not Signed',
    totalRecords: 'Total Records',
    totalProcessed: 'Total Processed',
    currentPageRecords: 'Current Page Records',
    search: 'Search',
    searchPlaceholder: 'Search invoice number, customer name, phone...',
    filterAll: 'All',
    filterUnconfirmed: 'Unconfirmed',
    filterConfirmed: 'Confirmed',
    confirm: 'Confirm',
    confirmSelected: 'Confirm Selected',
    confirmSuccess: 'Confirmation successful',
    confirmFailed: 'Confirmation failed',
    downloadPdf: 'Download PDF',
    previewImage: 'Preview Image',
    customerTel: 'Customer Phone',
    invoiceNo: 'Invoice Number',
    customerName: 'Customer Name',
    orderLines: 'Order Details',
    noData: 'No data available',
    loading: 'Loading...',
    pageSize: 'Records per page',
    manualReview: 'Manual Review by Customer Service',
    customerSignedPending: 'Signed Pending Confirmation',
    customerSignedConfirmed: 'Confirmed',
    customerNo: 'Customer Number',
    receiptDate: 'Receipt Date',
    uploadDate: 'Upload Date',
    remarks: 'Remarks',
    status: 'Status',
    action: 'Action',
    confirmed: 'Confirmed',
    unconfirmed: 'Unconfirmed',
  },
  
  // Workflow
  workflow: {
    title: 'Workflow Management',
    add: 'Add Workflow',
    name: 'Workflow Name',
    createdBy: 'Created By',
    createdAt: 'Created Date',
    updatedAt: 'Last Modified',
    status: 'Status',
    action: 'Action',
    design: 'Design',
    copy: 'Copy',
    delete: 'Delete',
    confirmDeleteTitle: 'Are you sure you want to delete this workflow?',
    confirmDeleteContent: 'Workflow Name: {name}',
    confirmDeleteOk: 'Delete',
    confirmDeleteCancel: 'Cancel',
    copySuccess: 'Workflow copied',
    deleteSuccess: 'Workflow deleted',
    deleteFailed: 'Delete failed',
    copyFailed: 'Copy failed',
    save: 'Save Workflow',
    saveSuccess: 'Workflow saved!',
    saveFailed: 'Save failed',
    nameRequired: 'Please enter workflow name',
    mustHaveStartEnd: 'Workflow must contain Start and End nodes',
    mustHaveEdge: 'Please create node connections',
    description: 'Description (optional)',
    back: 'Back to List',
    new: 'New Workflow',
    edit: 'Edit Workflow',
    searchPlaceholder: 'Search workflow name, creator...',
    search: 'Search',
    nodeTypes: 'Node Types',
    to: 'Recipient',
    message: 'Message Content',
    timeout: 'Timeout',
    sql: 'SQL Query',
    apiUrl: 'API URL',
    formName: 'Form Name',
    result: 'Result',
    approved: 'Approved',
    rejected: 'Rejected',
    deleteEdge: 'Delete Connection',
    startNodeCannotEdit: 'Start node cannot be edited'
  },
  
  // Common
  common: {
    loading: 'Loading...',
    error: 'Error',
    success: 'Success',
    cancel: 'Cancel',
    confirm: 'Confirm',
    save: 'Save',
    delete: 'Delete',
    edit: 'Edit',
    add: 'Add',
    search: 'Search',
    action: 'Action',
    refresh: 'Refresh',
    clear: 'Clear',
    submit: 'Submit',
    back: 'Back',
    next: 'Next',
    previous: 'Previous',
    close: 'Close',
    open: 'Open',
    yes: 'Yes',
    no: 'No',
    ok: 'OK',
    required: 'Required',
    minLength: 'at least {min} characters',
    pageRange: '{start}-{end} of {total} items'
  },
  
  // Recipient Selector
  recipientSelector: {
    title: 'Select Recipients',
    placeholder: 'Select recipients',
    clearAll: 'Clear All',
    confirmSelection: 'Confirm Selection',
    clear: 'Clear',
    
    // Tabs
    users: 'Users',
    contacts: 'Contacts',
    processVariables: 'Process Variables',
    initiators: 'Process Initiator',
    
    // Search placeholders
    searchUsers: 'Search users...',
    searchContacts: 'Search contacts...',
    
    // Selected recipients display
    selectedRecipients: 'Selected Recipients',
    usersCount: '{count} users',
    contactsCount: '{count} contacts',
    groupsCount: '{count} groups',
    hashtagsCount: '{count} tags',
    variablesCount: '{count} variables',
    processInitiator: 'Process Initiator',
    
    // Users tab
    usersTab: {
      title: 'Users',
      noUsersFound: 'No users found',
      userPhone: 'Phone: {phone}',
      userEmail: 'Email: {email}'
    },
    
    // Contacts tab
    contactsTab: {
      title: 'Contacts',
      broadcastGroups: 'Broadcast Groups',
      noGroupsData: 'No broadcast group data available',
      hashtags: 'Tags',
      noHashtagsData: 'No tags data available',
      contactList: 'Contact List',
      totalContacts: 'Total {count} contacts',
      noContactsFound: 'No contacts found',
      whatsAppNumber: 'WhatsApp: {number}',
      email: 'Email: {email}',
      pageRange: 'Page {start}-{end} of {total} items'
    },
    
    // Process Variables tab
    processVariablesTab: {
      title: 'Process Variables',
      description: 'Select process variables, the system will automatically replace with actual values during execution (recommended to select variables containing phone numbers)',
      noVariablesFound: 'No process variables found',
      value: 'Value: {value}',
      dataType: 'Type: {type}',
      instructions: {
        title: 'Instructions',
        items: [
          'Display all types of process variables',
          'Recommend selecting variables containing phone numbers',
          'Selected variables will be saved in ${variableName} format',
          'System will automatically replace with actual values during workflow execution',
          'Suitable for integrating external systems (such as ERP)'
        ]
      }
    },
    
    // Process Initiator tab
    initiatorsTab: {
      title: 'Process Initiator',
      useInitiator: 'Use Process Initiator',
      description: 'When checked, the system will automatically use the user who initiated this workflow instance as the recipient during execution',
      instructions: {
        title: 'Instructions',
        items: [
          'This option will be automatically replaced with the actual process initiator during workflow execution',
          'Suitable for scenarios that need to send messages to or wait for replies from the workflow initiator',
          'System will automatically obtain initiator information from the InitiatedBy field in the workflow_executions table'
        ]
      }
    },
    
    // Tags and labels
    tagLabels: {
      user: 'User',
      contact: 'Contact',
      group: 'Group',
      hashtag: 'Tag',
      variable: 'Variable',
      initiator: 'Process Initiator'
    },
    
    // Fallback texts
    fallbackTexts: {
      unknownGroup: 'Unknown Group',
      unknownTag: 'Unknown Tag',
      unknownVariable: 'Unknown Variable',
      autoReplace: 'Auto-replace at runtime',
      noBroadcastGroupsData: 'No broadcast group data available',
      noTagsData: 'No tags data available',
      contactList: 'Contact List',
      broadcastGroups: 'Broadcast Groups',
      tags: 'Tags',
      processVariables: 'Process Variables',
      selectProcessVariables: 'Select process variables, the system will automatically replace with actual values during execution (recommended to select variables containing phone numbers)',
      recommendSelectPhoneVariables: 'Recommend selecting variables containing phone numbers',
      saveInFormat: 'Selected variables will be saved in ${variableName} format',
      autoReplaceAtRuntime: 'System will automatically replace with actual values during workflow execution',
      suitableForERP: 'Suitable for integrating external systems (such as ERP)',
      autoReplaceWithInitiator: 'This option will be automatically replaced with the actual process initiator during workflow execution',
      suitableForInitiator: 'Suitable for scenarios that need to send messages to or wait for replies from the workflow initiator',
      autoGetFromWorkflow: 'System will automatically obtain initiator information from the InitiatedBy field in the workflow_executions table',
      instructions: 'Instructions',
      displayAllVariables: 'Display all types of process variables'
    }
  },

  
  // Language switching
  language: {
    zhTC: '繁體中文',
    zhSC: '简体中文', 
    en: 'English',
    language: 'Language'
  },
  
  // User Preferences
  preferences: {
    title: 'My Preferences',
    basicInfo: 'Basic Information',
    avatar: 'Avatar',
    uploadAvatar: 'Upload Avatar',
    account: 'Account',
    name: 'Name',
    email: 'Email',
    phone: 'Phone',
    language: 'Language',
    timezone: 'Timezone',
    password: 'Password',
    passwordPlaceholder: 'Enter new password if you need to change',
    isActive: 'Active',
    isOwner: 'Main Account',
    save: 'Save',
    cancel: 'Cancel',
    updateSuccess: 'Profile updated successfully',
    updateFailed: 'Failed to update profile',
    avatarUploadSuccess: 'Avatar uploaded successfully',
    avatarUploadFailed: 'Avatar upload failed'
  },
  
  // Company user management
  companyUserAdmin: {
    companyName: "Company Name",
    email: "Email",
    address: "Address",
    phone: "Phone",
    website: "Website",
    createdAt: "Created Time",
    updatedAt: "Updated Time",
    action: "Action",
    edit: "Edit",
    delete: "Delete",
    name: "Name",
    account: "Account",
    isActive: "Active",
    isOwner: "Main Account",
    active: "Active",
    inactive: "Inactive",
    owner: "Main",
    addUser: "Add User",
    searchUser: "Search account, Email, name...",
    batchEnable: "Batch Enable",
    batchDisable: "Batch Disable",
    timezone: "Timezone",
    language: "Language",
    addCompany: "Add Company"
  },
  
  // Company edit
  companyEdit: {
    uploadLogo: "Click to upload company avatar",
    basicInfo: "Company Basic Information",
    name: "Company Name",
    email: "Email",
    address: "Address",
    phone: "Phone",
    website: "Website",
    createdAt: "Created Time",
    updatedAt: "Updated Time",
    whatsappSetting: "WhatsApp Settings",
    waApiKey: "wA_API_Key",
    waPhoneNoId: "wA_PhoneNo_ID",
    waVerifyToken: "wA_VerifyToken",
    back: "Back",
    save: "Save"
  },
  
  // EForm related
  eform: {
    title: "Electronic Form Management",
    name: "Name",
    description: "Description",
    status: "Status",
    createdAt: "Created Time",
    updatedAt: "Updated Time",
    action: "Action",
    edit: "Edit",
    delete: "Delete",
    add: "Add Form",
    search: "Search",
    searchPlaceholder: "Search form name, description...",
    enabled: "Enabled",
    disabled: "Disabled",
    deleted: "Deleted",
    confirmDeleteTitle: "Are you sure you want to delete this form?",
    confirmDeleteContent: "This action cannot be undone",
    confirmDeleteOk: "Confirm",
    confirmDeleteCancel: "Cancel",
    deleteSuccess: "Delete successful",
    deleteFailed: "Delete failed",
    saveSuccess: "Save successful",
    saveFailed: "Save failed",
    batchDeleteTitle: "Batch Delete",
    batchDeleteContent: "Are you sure you want to delete the selected {count} forms?",
    batchDeleteSuccess: "Batch delete successful",
    batchDeleteFailed: "Batch delete failed",
    batchEnableTitle: "Batch Enable",
    batchEnableContent: "Are you sure you want to enable the selected {count} forms?",
    batchEnableSuccess: "Batch enable successful",
    batchDisableTitle: "Batch Disable",
    batchDisableContent: "Are you sure you want to disable the selected {count} forms?",
    batchDisableSuccess: "Batch disable successful",
    noData: "No data available",
    loading: "Loading...",
    totalRecords: "Total Records",
    currentPageRecords: "Current Page Records",
    pleaseSelectForms: "Please select forms to operate on",
    cannotGetCompanyInfo: "Cannot get user company information",
    updateFailed: "Update failed",
    createFailed: "Create failed",
    eformUpdateSuccess: "Form update successful",
    eformCreateSuccess: "Form create successful",
    batchEnable: "Batch Enable",
    batchDisable: "Batch Disable",
    batchDelete: "Batch Delete",
    refresh: "Refresh",
    eformManagement: "Form Management",
    searchNameDescription: "Search name, description...",
    clearFilter: "Clear Filter",
    pageRange: "Page ",
    total: " items, total ",
    batchDeleteForms: "Batch Delete Forms",
    cancel: "Cancel",
    confirmDelete: "Confirm Delete",
    forms: " forms",
    batchDeleteWarning: "Batch Delete Warning",
    batchDeleteWarningContent: "You are about to delete ",
    cannotBeUndone: " forms. This action cannot be undone. Please confirm the forms to delete.",
    pleaseConfirm: "Please confirm the forms to delete",
    batchEnableForms: "Batch Enable Forms",
    batchDisableForms: "Batch Disable Forms",
    confirm: "Confirm",
    enable: "Enable",
    disable: "Disable",
    batchStatusContent: "You are about to",
    enableAfter: " forms. After enabling, forms will be available for normal use.",
    disableAfter: " forms. After disabling, forms will be unavailable but can be re-enabled.",
    unknownError: "Unknown error",
    batchStatusSuccess: "Successful",
    batchStatusFailed: "Batch operation failed",
    copy: "Copy",
    copyForm: "Copy Form",
    copyFormInfo: "Copy Form Information",
    copyFormContent: "You are about to copy form",
    copyFormContent2: ". After copying, a new form copy will be created.",
    newFormName: "New Form Name",
    newFormDescription: "New Form Description",
    pleaseEnterFormName: "Please enter form name",
    formNameTooLong: "Form name cannot exceed 100 characters",
    enterNewFormName: "Please enter new form name",
    enterNewFormDescription: "Please enter new form description (optional)",
    copySuccess: "Copy successful",
    copyFailed: "Copy failed"
  },
  
  // EForm Designer
  eformDesigner: {
    title: 'Form Designer',
    formInfo: 'Form Information',
    formName: 'Form Name',
    formDescription: 'Form Description',
    formNamePlaceholder: 'Please enter form name',
    formDescriptionPlaceholder: 'Please enter form description',
    uploadFile: 'File Upload',
    createFromWordFile: 'Create from Word File',
    createFromExcelFile: 'Create from Excel File',
    createFromPdfFile: 'Create from PDF File',
    uploadImage: 'Upload Image',
    aiGenerate: 'AI Generate',
    aiGenerateForm: 'AI Generate Form',
    
    // Upload modal translations
    createFormFromWordFile: 'Create Form from Word File',
    createFormFromExcelFile: 'Create Form from Excel File',
    createFormFromPdfFile: 'Create Form from PDF File',
    imageUpload: 'Image Upload',
    wordFileConversion: 'Word File Conversion',
    excelFileConversion: 'Excel File Conversion',
    pdfFileConversion: 'PDF File Conversion',
    uploadWordFileDescription: 'Upload Word file (.doc, .docx), the system will automatically convert to HTML format and load into the editor. Supports text, tables, images and other content.',
    uploadExcelFileDescription: 'Upload Excel file (.xls, .xlsx), the system will automatically convert to HTML format and load into the editor. Supports tables, charts and other content.',
    uploadPdfFileDescription: 'Upload PDF file (.pdf), the system will automatically convert to HTML format and load into the editor. Supports text, images and other content.',
    uploadImageDescription: 'Upload image file, the system will automatically insert the image into the editor. Supports JPG, PNG, GIF and other formats.',
    converting: 'Converting...',
    uploading: 'Uploading...',
    clickOrDragWordFileHere: 'Click or drag Word file here',
    clickOrDragExcelFileHere: 'Click or drag Excel file here',
    clickOrDragPdfFileHere: 'Click or drag PDF file here',
    clickOrDragImageHere: 'Click or drag image here',
    supportsDocAndDocxFormats: 'Supports .doc and .docx formats, file size not exceeding 50MB',
    supportsXlsAndXlsxFormats: 'Supports .xls and .xlsx formats, file size not exceeding 50MB',
    supportsPdfFormat: 'Supports .pdf format, file size not exceeding 50MB',
    supportsJpgPngGifBmpWebpFormats: 'Supports JPG, PNG, GIF, BMP, WebP formats, file size not exceeding 10MB',
    processingWordFile: 'Processing Word file, please wait...',
    processingExcelFile: 'Processing Excel file, please wait...',
    processingPdfFile: 'Processing PDF file, please wait...',
    uploadingImage: 'Uploading image, please wait...',
    
    // AI modal translations
    aiSmartGeneration: 'AI Smart Generation',
    describeTheFormTypeAndRequirements: 'Describe the form type and requirements you need, AI will generate the corresponding HTML form for you. Suitable for approval processes, application forms, etc.',
    requirementsDescription: 'Requirements Description:',
    placeholderExample: 'For example: I need a leave application form, including employee information, leave type, start date, end date, leave reason and other fields...',
    includeCurrentHtml: 'Include current HTML',
    willModifyBasedOnCurrentContent: 'Will modify based on current content',
    willGenerateNewForm: 'Will generate new form',
    aiWillModifyAndOptimizeBasedOnYourCurrentFormContent: 'AI will modify and optimize based on your current form content. Current content length: {length} characters',
    
    // Editor component translations
    editTextInput: 'Edit Text Input',
    editTextArea: 'Edit Text Area',
    editButton: 'Edit Button',
    editRadioButton: 'Edit Radio Button',
    editCheckbox: 'Edit Checkbox',
    editLabel: 'Edit Label',
    
    // Common field labels
    placeholderText: 'Placeholder Text',
    fieldName: 'Field Name',
    defaultValue: 'Default Value',
    inputType: 'Input Type',
    dateFormat: 'Date Format',
    rows: 'Rows',
    columns: 'Columns',
    buttonText: 'Button Text',
    buttonType: 'Button Type',
    buttonStyle: 'Button Style',
    buttonSize: 'Button Size',
    labelText: 'Label Text',
    associatedField: 'Associated Field',
    labelStyle: 'Label Style',
    fontSize: 'Font Size',
    requiredField: 'Required Field',
    disabled: 'Disabled',
    requiredLabel: 'Required Label',
    
    // Placeholder texts
    pleaseEnterPlaceholderText: 'Please enter placeholder text',
    pleaseEnterFieldName: 'Please enter field name',
    pleaseEnterDefaultValue: 'Please enter default value',
    pleaseEnterDefaultDate: 'Please enter default date',
    pleaseEnterButtonText: 'Please enter button text',
    pleaseEnterLabelText: 'Please enter label text',
    pleaseEnterAssociatedFieldId: 'Please enter associated field ID',
    
    // Input type options
    text: 'Text',
    email: 'Email',
    password: 'Password',
    number: 'Number',
    phone: 'Phone',
    url: 'URL',
    date: 'Date',
    time: 'Time',
    file: 'File',
    
    // Button type options
    normalButton: 'Normal Button',
    submitButton: 'Submit Button',
    resetButton: 'Reset Button',
    
    // Button style options
    primaryButton: 'Primary Button',
    secondaryButton: 'Secondary Button',
    successButton: 'Success Button',
    dangerButton: 'Danger Button',
    warningButton: 'Warning Button',
    infoButton: 'Info Button',
    lightButton: 'Light Button',
    darkButton: 'Dark Button',
    
    // Button size options
    small: 'Small',
    medium: 'Medium',
    large: 'Large',
    
    // Label style options
    normal: 'Normal',
    bold: 'Bold',
    italic: 'Italic',
    underline: 'Underline',
    
    // Font size options
    small12px: 'Small (12px)',
    medium14px: 'Medium (14px)',
    large16px: 'Large (16px)',
    extraLarge18px: 'Extra Large (18px)',
    
    // Date format options and descriptions
    dateFormatDescription: 'Choose the date format displayed in the form, this will affect the date style users see',
    selectedFormat: 'Selected format: {format}',
    formatPreview: 'Format preview: {preview}',
    tip: 'Tip: Format settings will affect the display effect in WYSIWYG editor',
    pleaseEnterDefaultValueAccordingToDateFormat: 'Please enter default value according to the selected date format, for example: {example}',
    
    // GrapesJS component default content
    pleaseEnterYourMessage: 'Please enter your message',
    pleaseSelect: 'Please select...',
    option1: 'Option 1',
    option2: 'Option 2',
    option3: 'Option 3',
    pleaseEnterEmail: 'Please enter email',
    pleaseEnterPassword: 'Please enter password',
    pleaseEnterNumber: 'Please enter number',
    pleaseEnterUrl: 'Please enter URL',
    pleaseEnterPhoneNumber: 'Please enter phone number',
    labelText: 'Label Text',
    groupTitle: 'Group Title',
    groupInputField: 'Group input field',
    unknown: 'Unknown',
    aiWillGenerateANewFormBasedOnYourDescription: 'AI will generate a new form based on your description, without using the current content in the editor',
    aiGeneratingForm: 'AI is generating form, please wait...',
    generating: 'Generating...',
    generateForm: 'Generate Form',
    pleaseEnterYourRequirements: 'Please enter your requirements description',
    welcomeMessage: 'Welcome to Form Designer',
    
    // Component Editor translations
    editComponent: 'Edit Component',
    componentId: 'Component ID',
    editDropdownMenu: 'Edit Dropdown Menu',
    editTextInput: 'Edit Text Input',
    editTextArea: 'Edit Text Area',
    editButton: 'Edit Button',
    editRadioButton: 'Edit Radio Button',
    editCheckbox: 'Edit Checkbox',
    editLabel: 'Edit Label',
    fieldName: 'Field Name',
    fieldNamePlaceholder: 'Please enter field name',
    placeholderText: 'Placeholder Text',
    placeholderTextPlaceholder: 'Please enter placeholder text',
    optionList: 'Option List',
    optionValue: 'Option Value',
    optionText: 'Option Text',
    delete: 'Delete',
    addOption: '+ Add Option',
    requiredField: 'Required Field',
    disabled: 'Disabled',
    readonly: 'Read Only',
    buttonText: 'Button Text',
    buttonTextPlaceholder: 'Please enter button text',
    buttonType: 'Button Type',
    buttonStyle: 'Button Style',
    buttonSize: 'Button Size',
    generalButton: 'General Button',
    submitButton: 'Submit Button',
    resetButton: 'Reset Button',
    primaryButton: 'Primary Button',
    secondaryButton: 'Secondary Button',
    successButton: 'Success Button',
    dangerButton: 'Danger Button',
    warningButton: 'Warning Button',
    infoButton: 'Info Button',
    lightButton: 'Light Button',
    darkButton: 'Dark Button',
    smallSize: 'Small Size',
    mediumSize: 'Medium Size',
    largeSize: 'Large Size',
    labelText: 'Label Text',
    labelTextPlaceholder: 'Please enter label text',
    defaultValue: 'Default Value',
    defaultValuePlaceholder: 'Please enter default value',
    rows: 'Rows',
    cols: 'Columns',
    maxLength: 'Max Length',
    minLength: 'Min Length',
    inputType: 'Input Type',
    text: 'Text',
    email: 'Email',
    password: 'Password',
    number: 'Number',
    tel: 'Phone',
    url: 'URL',
    date: 'Date',
    time: 'Time',
    datetime: 'Date Time',
    dateFormat: 'Date Format',
    dateFormatPlaceholder: 'Select date format',
    checkboxText: 'Checkbox Text',
    checkboxTextPlaceholder: 'Please enter checkbox text',
    welcomeDescription: 'Please drag components from the left panel here to start designing your form.',
    pleaseDragComponents: 'Please drag components here to start designing your form',
    exampleInput: 'Example Input Field',
    exampleInputLabel: 'Example Input Field',
    exampleInputPlaceholder: 'Please enter...',
    pleaseEnter: 'Please enter content',
    newForm: 'New Form',
    saveForm: 'Save Form',
    formSaved: 'Form saved',
    saveFailed: 'Save failed',
    grapesJsInitializationFailed: 'GrapesJS initialization failed',
    uploadWord: 'Upload Word File',
    uploadExcel: 'Upload Excel File',
    uploadPdf: 'Upload PDF File',
    uploadImage: 'Upload Image',
    aiGenerate: 'AI Generate Form',
    aiPrompt: 'Please describe the form you want',
    generating: 'Generating...',
    generationFailed: 'Generation failed',
    aiFormGeneratedSuccess: 'AI form generation successful',
    wordUploadSuccess: 'Word file conversion successful',
    excelUploadSuccess: 'Excel file conversion successful',
    pdfUploadSuccess: 'PDF file conversion successful',
    imageUploadSuccess: 'Image upload successful',
    uploadFailed: 'Upload failed',
    formCreatedFromWord: 'Form created from Word',
    formCreatedFromExcel: 'Form created from Excel',
    formCreatedFromPdf: 'Form created from PDF',
    unknownError: 'Unknown error',
    fileTooLarge: 'File too large',
    unsupportedFormat: 'Unsupported format',
    includeCurrentHtml: 'Include current HTML content',
    toolbarCollapse: 'Collapse Toolbar',
    toolbarExpand: 'Expand Toolbar',
    viewCode: 'View Code',
    viewPreview: 'Preview',
    backToList: 'Back to List',
    wordFileConvertedSuccess: 'Word file conversion successful',
    excelFileConvertedSuccess: 'Excel file conversion successful',
    pdfFileConvertedSuccess: 'PDF file conversion successful',
    conversionFailed: 'Conversion failed',
    requestTimeoutWordFileConversion: 'Word file conversion request timeout',
    requestTimeoutExcelFileConversion: 'Excel file conversion request timeout',
    requestTimeoutPdfFileConversion: 'PDF file conversion request timeout',
    requestTimeoutImageUpload: 'Image upload request timeout',
    requestTimeoutAiGeneration: 'AI generation request timeout',
    requestTimeoutPleaseTryAgain: 'Request timeout, please try again',
    pleaseTryAgainLaterOrCheckNetworkConnection: ', please try again later or check network connection',
    pleaseEnterYourRequirements: 'Please enter your requirements',
    aiFormGeneratedSuccess: 'AI form generation successful',
    aiGeneratedForm: 'AI Generated Form',
    pleaseWriteFormContent: 'Please write form content',
    pleaseEnterFormName: 'Please enter form name',
    formSavedSuccessfully: 'Form saved successfully',
    formSavedToLocalStorage: 'Form saved to local storage',
    saveFailed: 'Save failed',
    expandToolbar: 'Expand Toolbar',
    back: 'Back',
    saving: 'Saving...',
    saveDesign: 'Save Design',
    aiGenerateForm: 'AI Generate Form',
    createFromWordFile: 'Create from Word File',
    createFromExcelFile: 'Create from Excel File',
    createFromPdfFile: 'Create from PDF File',
    createFromImageFile: 'Create from Image',
    viewDesign: 'View Design',
    viewCode: 'View Code',
    formName: 'Form Name',
    formDescription: 'Form Description',
    formNamePlaceholder: 'Please enter form name',
    formDescriptionPlaceholder: 'Please enter form description (optional)',
    uploadFile: 'Upload File',
    dragAndDropOrClick: 'Drag and drop files here or click to upload',
    selectFile: 'Select File',
    upload: 'Upload',
    cancel: 'Cancel',
    save: 'Save',
    close: 'Close',
    generate: 'Generate',
    promptPlaceholder: 'Please describe the form you want, for example: a contact form containing name, phone, address',
    includeCurrentContent: 'Include current content',
    yes: 'Yes',
    no: 'No',
    loading: 'Loading...',
    error: 'Error',
    success: 'Success',
    warning: 'Warning',
    info: 'Information'
  },
  
  // EForm Instance
  eformInstance: {
    title: "Form Instance",
    status: "Status",
    submittedAt: "Submitted Time",
    approvedAt: "Approved Time",
    rejectedAt: "Rejected Time",
    approvedBy: "Approved By",
    rejectedBy: "Rejected By",
    approvalNote: "Approval Note",
    rejectNote: "Rejection Note",
    approve: "Approve",
    reject: "Reject",
    back: "Back",
    loading: "Loading...",
    error: "Error",
    noData: "No data available",
    pending: "Pending",
    approved: "Approved",
    rejected: "Rejected",
    confirmApprove: "Are you sure you want to approve this form?",
    confirmReject: "Are you sure you want to reject this form?",
    approveSuccess: "Approval successful",
    rejectSuccess: "Rejection successful",
    approveFailed: "Approval failed",
    rejectFailed: "Rejection failed",
    noteRequired: "Please enter note",
    loginRequired: "Please login first",
    loginExpired: "Login expired, please login again",
    fetchFailed: "Failed to get form instance",
    formApproved: "Form approved",
    formRejected: "Form rejected",
    pendingApproval: "Pending Approval",
    formInstanceNotFound: "Form instance not found",
    formInfo: "Form Information",
    instanceName: "Instance Name",
    createdAt: "Created Time",
    userInput: "User Input",
    approver: "Approver",
    approvalTime: "Approval Time",
    formContent: "Form Content",
    approveForm: "Approve Form",
    cancel: "Cancel",
    confirmApprove: "Confirm Approve",
    confirmApproveForm: "Are you sure you want to approve this form?",
    approvalNotePlaceholder: "Approval note (optional)",
    rejectForm: "Reject Form",
    confirmReject: "Confirm Reject",
    confirmRejectForm: "Are you sure you want to reject this form?",
    rejectReasonPlaceholder: "Rejection reason (optional)"
  },
  
  // WhatsApp Template
  whatsappTemplate: {
    title: "Message Template Management",
    name: "Name",
    description: "Description",
    category: "Category",
    status: "Status",
    type: "Type",
    createdAt: "Created Time",
    updatedAt: "Updated Time",
    action: "Action",
    add: "Add Template",
    edit: "Edit",
    delete: "Delete",
    copy: "Copy",
    preview: "Preview",
    import: "Import",
    search: "Search",
    searchPlaceholder: "Search template name, description...",
    enabled: "Enabled",
    disabled: "Disabled",
    text: "Text",
    image: "Image",
    video: "Video",
    audio: "Audio",
    document: "Document",
    location: "Location",
    contact: "Contact",
    interactive: "Interactive",
    button: "Button",
    list: "List",
    confirmDeleteTitle: "Are you sure you want to delete this template?",
    confirmDeleteContent: "This action cannot be undone",
    confirmDeleteOk: "Confirm",
    confirmDeleteCancel: "Cancel",
    deleteSuccess: "Delete successful",
    deleteFailed: "Delete failed",
    copySuccess: "Copy successful",
    copyFailed: "Copy failed",
    saveSuccess: "Save successful",
    saveFailed: "Save failed",
    importSuccess: "Import successful",
    importFailed: "Import failed",
    batchDeleteTitle: "Batch Delete",
    batchDeleteContent: "Are you sure you want to delete the selected {count} templates?",
    batchDeleteSuccess: "Batch delete successful",
    batchDeleteFailed: "Batch delete failed",
    noData: "No data available",
    loading: "Loading...",
    totalRecords: "Total Records",
    currentPageRecords: "Current Page Records",
    messageContent: "Message Content",
    mediaUrl: "Media URL",
    caption: "Caption",
    latitude: "Latitude",
    longitude: "Longitude",
    address: "Address",
    phoneNumber: "Phone Number",
    displayName: "Display Name",
    buttonText: "Button Text",
    buttonType: "Button Type",
    listTitle: "List Title",
    listDescription: "List Description",
    listItems: "List Items",
    variables: "Variables",
    addVariable: "Add Variable",
    variableName: "Variable Name",
    variableValue: "Variable Value",
    removeVariable: "Remove Variable",
    metaTemplates: "Meta Templates",
    importFromMeta: "Import from Meta",
    createMetaTemplate: "Create Meta Template",
    deleteMetaTemplate: "Delete Meta Template",
    metaTemplateName: "Meta Template Name",
    metaTemplateCategory: "Meta Template Category",
    customName: "Custom Name",
    filterAll: "All",
    filterEnabled: "Enabled",
    filterDisabled: "Disabled",
    templateName: "Template Name",
    templateDescription: "Template Description",
    templateType: "Template Type",
    templateStatus: "Template Status",
    templateLanguage: "Template Language",
    templateVersion: "Template Version",
    templateUpdateTime: "Template Update Time",
    templateOperation: "Template Operation",
    templatePreview: "Template Preview",
    templateEdit: "Template Edit",
    templateCopy: "Template Copy",
    templateDelete: "Template Delete",
    templateDeleteMeta: "Delete Meta Template",
    templateDeleteConfirm: "Are you sure you want to delete this template from Meta?",
    templateDeleteConfirmLocal: "Are you sure you want to delete this template?",
    templateConfirm: "Confirm",
    templateCancel: "Cancel",
    templateBatchDelete: "Batch Delete",
    templateBatchDeleteConfirm: "Are you sure you want to delete the selected {count} templates? This action cannot be undone.",
    templateBatchDeleteConfirmCount: "Are you sure you want to delete the selected",
    templateBatchDeleteConfirmSuffix: " templates? This action cannot be undone.",
    templateBatchDeleteOk: "Confirm Delete",
    templateBatchDeleteCancel: "Cancel",
    templateAdd: "Add Template",
    templateEditTitle: "Edit Template",
    templateAddTitle: "Add Template",
    templateSave: "Save",
    templateCancel: "Cancel",
    templateNameRequired: "Please enter template name",
    templateNamePlaceholder: "Please enter template name",
    templateDescriptionPlaceholder: "Please enter template description (optional)",
    templateCategoryRequired: "Please select category",
    templateCategoryPlaceholder: "Please select category",
    templateTypeRequired: "Please select template type",
    templateTypePlaceholder: "Please select template type",
    templateStatusRequired: "Please select status",
    templateStatusPlaceholder: "Please select status",
    templateLanguageRequired: "Please select language",
    templateLanguagePlaceholder: "Please select language",
    templateMessageContent: "Message Content",
    templateMessageContentRequired: "Please enter message content",
    templateMessageContentPlaceholder: "Please enter message content, you can use {{variable_name}} format to insert variables",
    templateMediaType: "Media Type",
    templateMediaTypeRequired: "Please select media type",
    templateMediaUrl: "Media File URL",
    templateMediaUrlRequired: "Please enter media file URL",
    templateMediaUrlPlaceholder: "Please enter media file URL",
    templateMediaCaption: "Media Caption",
    templateMediaCaptionPlaceholder: "Please enter media caption (optional)",
    templateInteractiveType: "Interactive Type",
    templateInteractiveTypeRequired: "Please select interactive type",
    templateHeader: "Header",
    templateHeaderPlaceholder: "Please enter header (optional)",
    templateBody: "Main Content",
    templateBodyRequired: "Please enter main content",
    templateBodyPlaceholder: "Please enter main content",
    templateFooter: "Footer Text",
    templateFooterPlaceholder: "Please enter footer text (optional)",
    templateLatitude: "Latitude",
    templateLatitudeRequired: "Please enter latitude",
    templateLatitudePlaceholder: "Please enter latitude",
    templateLongitude: "Longitude",
    templateLongitudeRequired: "Please enter longitude",
    templateLongitudePlaceholder: "Please enter longitude",
    templateLocationName: "Location Name",
    templateLocationNameRequired: "Please enter location name",
    templateLocationNamePlaceholder: "Please enter location name",
    templateLocationAddress: "Address",
    templateLocationAddressRequired: "Please enter address",
    templateLocationAddressPlaceholder: "Please enter complete address",
    templateContactName: "Contact Name",
    templateContactNameRequired: "Please enter contact name",
    templateContactNamePlaceholder: "Please enter contact name",
    templateContactPhone: "Contact Phone",
    templateContactPhoneRequired: "Please enter contact phone",
    templateContactPhonePlaceholder: "Please enter contact phone",
    templateContactEmail: "Contact Email",
    templateContactEmailPlaceholder: "Please enter contact email (optional)",
    templateVariables: "Variable Settings",
    templateVariableName: "Variable Name",
    templateVariableNamePlaceholder: "Variable name",
    templateVariableType: "Type",
    templateVariableTypePlaceholder: "Type",
    templateVariableDescription: "Description",
    templateVariableDescriptionPlaceholder: "Description",
    templateVariableRequired: "Required",
    templateAddVariable: "Add Variable",
    templateFromMetaImport: "Import from Meta",
    templateBatchDelete: "Batch Delete",
    templateWhatsAppMessageTemplateManagement: "WhatsApp Message Template Management",
    templateCopySuccess: "Template copy successful",
    templateCopyFailed: "Template copy failed",
    templateCopying: "Copying template...",
    templateSearchPlaceholder: "Search template name, description or category",
    templateCategorySelect: "Select Category",
    templateStatusSelect: "Select Status",
    templateClearFilter: "Clear Filter",
    templatePageRange: "Page",
    templatePageTotal: " items, total ",
    templatePageItems: " items",
    templateBasicInfo: "Basic Information",
    templateContent: "Template Content",
    templateVariableDefinition: "Variable Definition",
    templateWelcome: "Welcome",
    templateOrder: "Order",
    templateMarketing: "Marketing",
    templateSupport: "Support",
    templateGeneral: "General",
    templateMedia: "Media",
    templateInteractive: "Interactive",
    templateLocation: "Location",
    templateContact: "Contact",
    templateActive: "Active",
    templateInactive: "Inactive",
    templateDraft: "Draft",
    templateTraditionalChinese: "Traditional Chinese",
    templateSimplifiedChinese: "Simplified Chinese",
    templateEnglish: "English",
    templateString: "Text",
    templateNumber: "Number",
    templateDate: "Date",
    templateID: "ID",
    templateRefreshMetaTemplates: "Refresh Meta Templates",
    templateImportFromMeta: "Import Templates from Meta",
    templateImport: "Import",
    templateGetMetaTemplatesFailed: "Failed to get Meta templates",
    templateImportSuccess: "Template import successful",
    templateImportFailed: "Import failed",
    templateCreateMetaTemplateSuccess: "Meta template creation successful",
    templateCreateFailed: "Creation failed",
    templateDeleteMetaTemplateSuccess: "Meta template deletion successful",
    templateDeleteFailed: "Deletion failed",
    templateGetTemplateListFailed: "Failed to get template list",
    templatePleaseSelectTemplates: "Please select templates to delete",
    templateSuccessDelete: "Successfully deleted",
    templateTemplates: " templates",
    templateDeleteSuccess: "Template deletion successful",
    templateUpdateSuccess: "Template update successful",
    templateUpdateFailed: "Update failed",
    templateCreateSuccess: "Creation successful",
    templateCreateFailed: "Creation failed",
    templateSaveFailed: "Save failed",
    templateParseContentFailed: "Parse content failed",
    templateDeleteConfirmLocal: "Are you sure you want to delete this template?",
    preview: "Preview",
    edit: "Edit",
    copy: "Copy",
    delete: "Delete",
    category: "Category",
    type: "Type",
    status: "Status",
    updatedAt: "Updated Time",
    action: "Action",
    add: "Add",
    title: "Message Template Management",
    templateLanguage: "Template Language",
    templateVersion: "Template Version",
    
    // Meta Template related translations
    metaTemplate: {
      // Buttons and actions
      createMetaTemplate: "Create Meta Template",
      preview: "Preview",
      delete: "Delete",
      confirm: "Confirm",
      cancel: "Cancel",
      insert: "Insert",
      search: "Search",
      refresh: "Refresh",
      clearFilter: "Clear Filter",
      submit: "Submit to Meta Review",
      
      // Format button tooltips
      boldTooltip: "Bold (*text*)",
      italicTooltip: "Italic (_text_)",
      strikethroughTooltip: "Strikethrough (~text~)",
      codeTooltip: "Code (```text```)",
      insertVariableTooltip: "Insert Variable",
      
      // Form labels
      templateName: "Template Name",
      category: "Category",
      language: "Language",
      headerOptional: "Header (Optional)",
      bodyContent: "Body Content",
      footerOptional: "Footer (Optional)",
      
      // Form hints and help
      templateNameHelp: "Only lowercase letters, numbers and underscores allowed, e.g.: welcome_message_001",
      templateNamePlaceholder: "e.g.: welcome_message",
      categoryPlaceholder: "Select template category",
      languagePlaceholder: "Select language",
      headerPlaceholder: "e.g.: Important Notice",
      bodyPlaceholder: "e.g.: Your order {{1}} has been confirmed\nAmount: *${{2}}*\nEstimated delivery: _{{3}}_",
      bodyHelp: "Supported formats: *bold* _italic_ ~strikethrough~ ```code```",
      footerPlaceholder: "e.g.: Thank you for using",
      
      // Status options
      approved: "Approved",
      pending: "Pending",
      rejected: "Rejected",
      paused: "Paused",
      
      // Category options
      marketing: "Marketing",
      utility: "Utility",
      authentication: "Authentication",
      marketingFull: "Marketing (MARKETING)",
      utilityFull: "Utility (UTILITY)",
      authenticationFull: "Authentication (AUTHENTICATION)",
      
      // Language options
      traditionalChinese: "Traditional Chinese",
      simplifiedChinese: "Simplified Chinese",
      english: "English",
      
      // Action confirmations
      deleteConfirmTitle: "Are you sure you want to delete this Meta template?",
      deleteConfirmDescription: "This action will permanently delete the template from Meta platform",
      
      // Button types
      quickReply: "Quick Reply",
      url: "URL",
      phoneNumber: "Phone",
      
      // Variable related
      addVariable: "Add Variable",
      insertVariable: "Insert Variable",
      variableType: "Variable Type",
      numberVariable: "Number Variable",
      nameVariable: "Named Variable",
      recommended: "Recommended",
      variableName: "Variable Name",
      variableNamePlaceholder: "e.g.: customer_name, order_id, amount",
      variableNameHelp: "Use lowercase letters and underscores, e.g.: customer_name",
      autoNumberHelp: "System will automatically find the next available number and insert it",
      
      // Titles and descriptions
      createTitle: "Create Meta Template",
      previewTitle: "Template Preview",
      insertVariableTitle: "Insert Variable",
      basicInfo: "Basic Information",
      contentComponents: "Content Components",
      buttonsOptional: "Buttons (Optional)",
      
      // Category descriptions
      categoryDescription: "Category Description (Meta will automatically adjust based on content):",
      marketingDescription: "Promotions, offers, new product recommendations, welcome messages",
      utilityDescription: "Order confirmations, shipping notifications, account updates, appointment reminders",
      authenticationDescription: "Only for OTP verification codes",
      utilityWarning: "Content must be transactional notifications, cannot contain promotional language, otherwise it will be changed to MARKETING",
      
      // Format help
      formatHelp: "WhatsApp formatting syntax:",
      formatExamples: "• *text* = bold • _text_ = italic • ~text~ = strikethrough • ```text``` = monospace font",
      variableHelp: "Use Add Variable button to insert {{1}} {{2}} etc. variables",
      
      // Button configuration
      buttonText: "Button Text",
      buttonTextPlaceholder: "Button Text",
      buttonType: "Button Type",
      urlPlaceholder: "https://example.com",
      phonePlaceholder: "+852 1234 5678",
      addButton: "Add Button",
      buttonCount: "Add Button ({count}/3)",
      
      // Variable examples
      variableExamples: "Variable Examples:",
      variableExampleLabel: "Example value for variable {{index}}",
      variableExamplePlaceholder: "e.g.: John, 12345, etc.",
      
      // Search and filter
      searchPlaceholder: "Search template name",
      selectStatus: "Select Status",
      selectCategory: "Select Category",
      selectLanguage: "Select Language",
      query: "Query",
      
      // Tip cards
      metaOfficialTemplates: "Meta Official Templates:",
      metaDescription: "Need to be submitted to Meta for review, can only be used after approval.",
      applicableScenarios: "Applicable Scenarios:",
      applicableScenariosDesc: "Proactively send marketing campaigns, order notifications, customer service messages",
      sessionWindow: "24-hour Conversation Window Limit:",
      withinWindowLabel: "Within Window",
      withinWindow: " (within 24 hours of customer's last message): Can send any message (template or free format)",
      outsideWindowLabel: "Outside Window",
      outsideWindow: " (over 24 hours): Can only send approved template messages",
      tip: "Tip:",
      tipDescription: "It is recommended to pre-create and review templates for common scenarios, so you can proactively contact customers at any time",
      
      // Status labels
      statusApproved: "Approved",
      statusPending: "Pending",
      statusRejected: "Rejected",
      statusPaused: "Paused",
      
      // Language labels
      langTraditionalChinese: "Traditional Chinese",
      langSimplifiedChinese: "Simplified Chinese",
      langEnglish: "English",
      
      // Category labels
      categoryMarketing: "Marketing",
      categoryUtility: "Utility",
      categoryAuthentication: "Authentication",
      
      // Basic info
      basicInfoTitle: "Basic Information",
      templateContent: "Template Content",
      
      // Operation results
      submitSuccess: "Meta template submitted for review!",
      submitFailed: "Submit failed",
      deleteSuccess: "Meta template deleted",
      deleteFailed: "Delete failed",
      loading: "Submitting to Meta review...",
      deleting: "Deleting...",
      
      // Form validation
      nameRequired: "Please enter template name",
      namePattern: "Only lowercase letters, numbers and underscores allowed",
      categoryRequired: "Please select category",
      languageRequired: "Please select language",
      bodyRequired: "Please enter body content",
      
      // Table column titles
      templateName: "Template Name",
      category: "Category",
      language: "Language",
      reviewStatus: "Review Status",
      metaId: "Meta ID",
      action: "Action",
      
      // Status text
      approved: "Approved",
      pending: "Pending",
      rejected: "Rejected",
      paused: "Paused",
      
      // Category text
      marketing: "Marketing",
      utility: "Utility",
      authentication: "Authentication",
      
      // Language text
      traditionalChinese: "Traditional Chinese",
      simplifiedChinese: "Simplified Chinese",
      english: "English",
      
      // Error and warning messages
      cannotGetInputElement: "Cannot get input element, please try again",
      pleaseSelectTextToFormat: "Please select text to format first",
      cannotInsertVariable: "Cannot insert variable, please try again",
      pleaseEnterVariableName: "Please enter variable name",
      maxButtonsWarning: "Maximum 3 buttons allowed",
      variableInserted: "Variable inserted",
      
      // Character count
      characters: "characters",
      
      // Category descriptions
      categoryDescriptionTitle: "Category Description (Meta will automatically adjust based on content):",
      marketingDescription: "Promotions, offers, new product recommendations, welcome messages",
      utilityDescription: "Order confirmations, shipping notifications, account updates, appointment reminders",
      authenticationDescription: "Only for OTP verification codes",
      utilityWarning: "Content must be transactional notifications, cannot contain promotional language, otherwise it will be changed to MARKETING",
      
      // Variable examples
      variableExamples: "Variable Examples:",
      variableExampleLabel: "Example value for variable {{index}}",
      variableExamplePlaceholder: "e.g.: John, 12345, etc.",
      
      // Preview template
      name: "Name:",
      category: "Category:",
      language: "Language:",
      status: "Status:",
      
      // Variable type descriptions
      autoNumberDescription: "Auto numbering:",
      customNameDescription: "Custom name:",
      metaStandardFormat: "Suitable for Meta official templates, complies with WhatsApp standard format",
      moreReadable: "More readable, but requires correct variable name mapping when sending",
      
      // Total display
      totalTemplates: "Total {count} templates",
      
      // Error messages
      validationFailed: "Validation failed",
      createFailed: "Create failed",
      
      // Example value
      exampleValue: "Example value {index}",
      
      // Rejection reason related
      rejectionReason: "Rejection Reason:",
      apiNoRejectionReason: "API did not provide rejection reason",
      apiLimitationNote: "Due to Meta API limitations, detailed rejection reasons cannot be retrieved.",
      suggestion: "Suggestion:",
      suggestionText: "Please modify template content based on common rejection reasons and resubmit. You can delete this template and create a new version.",
      commonRejectionReasons: "Common Rejection Reasons:",
      floatingParameters: "Floating Parameters:",
      floatingParametersDesc: "Parameters lack sufficient contextual description",
      marketingContent: "Marketing Content:",
      marketingContentDesc: "Content is too commercial or exaggerated",
      policyViolation: "Policy Violation:",
      policyViolationDesc: "Content violates WhatsApp policies",
      wrongCategory: "Wrong Category:",
      wrongCategoryDesc: "Selected incorrect template category"
    },
    
    // WhatsApp template list page
    templateList: {
      internalTemplates: "Internal Templates",
      metaOfficialTemplates: "Meta Official Templates",
      description: "Manage WhatsApp message templates: Internal templates are used for rapid iteration, Meta official templates are used for formal marketing activities"
    },
    
    // Missing translation keys
    categorySelect: "Select Category",
    statusSelect: "Select Status",
    confirmDelete: "Confirm Delete",
    templateConfirmDeleteSelected: "Are you sure you want to delete the selected",
    templateConfirmDeleteSelectedSuffix: " templates? This action cannot be undone.",
    addTitle: "Add Template",
    nameRequired: "Please enter template name",
    namePlaceholder: "Please enter template name",
    descriptionPlaceholder: "Please enter template description (optional)",
    categoryRequired: "Please select category",
    categoryPlaceholder: "Please select category",
    welcome: "Welcome",
    order: "Order",
    marketing: "Marketing",
    support: "Support",
    general: "General",
    typeRequired: "Please select template type",
    typePlaceholder: "Please select template type",
    media: "Media",
    pleaseEnterMessageContent: "Please enter message content",
    pleaseEnterMessageContentWithVariables: "Please enter message content, you can use {{variable_name}} format to insert variables",
    statusRequired: "Please select status",
    statusPlaceholder: "Please select status",
    language: "Language",
    languageRequired: "Please select language",
    languagePlaceholder: "Please select language",
    traditionalChinese: "Traditional Chinese",
    simplifiedChinese: "Simplified Chinese",
    english: "English",
    searchAddress: "Search Address",
    enterAddressToSearch: "Enter address or place name to search",
    selectThisLocation: "Select This Location",
    confirm: "Confirm",
    cancel: "Cancel",
    save: "Save",
    
    // Map related translations
    searchMapContainerInUse: "Search map container is in use, cleaning up...",
    searchMapContainerCleanupWarning: "Warning while cleaning up search map container:",
    searchMap: "Search Map",
    mainMap: "Main Map",
    mapContainerInUse: "Map container is in use, cleaning up...",
    mapContainerCleanupWarning: "Warning while cleaning up map container:",
    mapInitializing: "Map is initializing, skipping duplicate initialization",
    cannotGetCurrentLocation: "Cannot get current location, please select manually",
    browserNotSupportGeolocation: "Your browser does not support geolocation",
    unknownLocation: "Unknown location",
    reverseGeocodeFailed: "Reverse geocoding failed:",
    addressSearchSuccess: "Address search successful",
    noAddressFound: "No address found",
    searchFailed: "Search failed, please try again later",
    addressSearchFailed: "Address search failed:",
    getLocationFailed: "Failed to get location:",
    saveTemplateError: "Save template error:",
    
    // Button configuration related translations
    buttonConfiguration: "Button Configuration",
    maxButtonsLimit: "Maximum 3 buttons allowed",
    addButton: "Add Button",
    maxThreeButtons: "Maximum 3 buttons",
    buttonText: "Button Text {index}",
    pleaseEnterButtonText: "Please enter button text",
    buttonType: "Button Type",
    pleaseSelectButtonType: "Please select button type",
    quickReply: "Quick Reply",
    replyId: "Reply ID",
    pleaseEnterReplyId: "Please enter reply ID",
    replyIdPlaceholder: "Reply ID (used to identify user selection)",
    
    // List configuration related translations
    listOptionsConfiguration: "List Options Configuration",
    listTitle: "List Title",
    pleaseEnterListTitle: "Please enter list title",
    maxOptionsLimit: "Maximum 10 options allowed",
    addOption: "Add Option",
    maxTenOptions: "Maximum 10 options",
    optionId: "Option {index} ID",
    pleaseEnterOptionId: "Please enter option ID",
    optionTitle: "Option Title",
    pleaseEnterOptionTitle: "Please enter option title",
    optionDescription: "Option Description",
    optionDescriptionOptional: "Option Description (optional)",
    
    // Product configuration related translations
    productConfiguration: "Product Configuration",
    productId: "Product ID",
    pleaseEnterProductId: "Please enter product ID",
    productCatalogId: "Product Catalog ID",
    pleaseEnterProductCatalogId: "Please enter product catalog ID",
    pleaseEnterFacebookProductCatalogId: "Please enter Facebook product catalog ID",
    productImageUrl: "Product Image URL",
    pleaseEnterProductImageUrl: "Please enter product image URL",
    
    // Copy related translations
    copy: "Copy",
    
    // Additional missing translation keys
    mediaType: "Media Type",
    interactiveType: "Interactive Type",
    header: "Header",
    body: "Main Content",
    footer: "Footer Text",
    mapSelection: "Map Selection",
    getCurrentLocation: "Get Current Location",
    advancedSearch: "Advanced Search",
    contactName: "Contact Name",
    contactPhone: "Contact Phone",
    contactEmail: "Contact Email",
    pleaseSelectMediaType: "Please select media type",
    pleaseSelectInteractiveType: "Please select interactive type",
    pleaseEnterHeader: "Please enter header (optional)",
    pleaseEnterMainContent: "Please enter main content",
    pleaseEnterFooter: "Please enter footer text (optional)",
    pleaseEnterContactName: "Please enter contact name",
    pleaseEnterContactPhone: "Please enter contact phone",
    pleaseEnterContactEmail: "Please enter contact email (optional)",
    searchAddressOrDragMarker: "Search address or drag marker to suitable position",
    mediaFileUrl: "Media File URL",
    pleaseEnterMediaFileUrl: "Please enter media file URL",
    mediaCaption: "Media Caption",
    pleaseEnterMediaCaption: "Please enter media caption (optional)",
    mainContent: "Main Content",
    product: "Product",
    pleaseEnterLatitude: "Please enter latitude",
    pleaseEnterLongitude: "Please enter longitude",
    pleaseEnterLocationName: "Please enter location name",
    pleaseEnterCompleteAddress: "Please enter complete address",
    locationName: "Location Name",
    
    // Template Variable Configuration
    templateVariables: 'Template Variables',
    metaTemplateVariableHint: 'Meta Template Variable Configuration',
    metaTemplateVariableDescription: 'Meta official templates use numeric parameters (1, 2, 3...) or named parameters. Please configure the corresponding variable source according to the template definition.',
    addTemplateVariable: 'Add Template Variable',
    parameterName: 'Parameter Name',
    metaParameterHint: 'Meta template parameters: Use numbers (1, 2, 3...) or variable names (customer_name, order_id)',
    processVariable: 'Process Variable',
    selectVariable: 'Select Variable',
    selectedVariable: 'Selected: {variableName}'
  },
  
      // WhatsApp Workflow Designer
  workflowDesigner: {
    title: 'Workflow Designer',
    workflowInfo: 'Workflow Information',
    workflowName: 'Workflow Name',
    workflowDescription: 'Workflow Description',
    workflowNamePlaceholder: 'Please enter workflow name',
    workflowDescriptionPlaceholder: 'Please enter workflow description',
    nodeTypes: 'Node Types',
    loadingNodeTypes: 'Loading node types...',
    nodeConfiguration: 'Node Configuration',
    connection: 'Connection',
    node: 'Node',
    flow: 'Flow',
    startNode: 'Start Node',
    endNode: 'End Node',
    waitReplyNode: 'Wait Reply Node',
    waitForQRCodeNode: 'Wait for QR Code Node',
    switchNode: 'Switch Node',
    sendMessageNode: 'Send Message Node',
    sendWhatsAppNode: 'Send WhatsApp Node',
    sendTemplateNode: 'Send Template Node',
    conditionNode: 'Condition Node',
    formNode: 'Form Node',
    webhookNode: 'Webhook Node',
    callApiNode: 'Trigger External API Node',
    dataSetQueryNode: 'DataSet Query Node',
    
    // DataSet node related translations
    dataSet: {
      selectDataSet: 'Select DataSet',
      selectDataSetPlaceholder: 'Select DataSet to operate',
      operationType: 'Operation Type',
      operationTypePlaceholder: 'Please select operation type',
      select: 'SELECT',
      insert: 'INSERT',
      update: 'UPDATE',
      delete: 'DELETE',
      queryConditions: 'Query Conditions',
      addQueryConditionGroup: 'Add Query Condition Group',
      editQueryConditionGroup: 'Edit Query Condition Group',
      queryConditionGroup: 'Query Condition Group',
      conditionRelation: 'Condition Relation',
      conditionRelationPlaceholder: 'Please select condition relation',
      and: 'AND',
      or: 'OR',
      andDescription: 'All conditions must be satisfied',
      orDescription: 'Any condition can be satisfied',
      cancel: 'Cancel',
      add: 'Add',
      update: 'Update',
      selectDataSetField: 'Select DataSet Field',
      selectDataSetFieldPlaceholder: 'Please select DataSet field',
      operator: 'Operator',
      operatorPlaceholder: 'Please select operator',
      conditionValue: 'Condition Value',
      conditionValuePlaceholder: 'Please enter condition value',
      conditionValueInputPlaceholder: 'Enter condition value, process variables ${variableName} can be used',
      conditionLabel: 'Condition Label',
      conditionLabelPlaceholder: 'Optional condition description label',
      availableProcessVariables: 'Available Process Variables',
      clickVariableToInsert: 'Click variable name to insert into condition value',
      editQueryCondition: 'Edit Query Condition',
      noDataSetFields: 'No DataSet fields',
      conditionCount: 'Condition Count',
      qrCodeSuccessMessage: 'QR Code scanned successfully! Process will continue.',
      qrCodeErrorMessage: 'Unable to process your uploaded image, please upload again.',
      template: 'Template',
      close: 'Close',
      testQuery: 'Test Query',
      queryResultDescription: 'Query results based on input simulation data (first 10 records):',
      noQueryResultData: 'No query result data',
      totalRecords: 'Total {count} records',
      pvSimulationDataHelp: 'Enter test values and click "Test Query" to view results',
      addCondition: 'Add Condition',
      operationData: 'Operation Data',
      setOperationData: 'Set Operation Data',
      fieldMapping: 'Field Mapping',
      setFieldMapping: 'Set Field Mapping',
      selectDataSetField: 'Select DataSet Field',
      selectProcessVariable: 'Select Process Variable',
      addFieldMapping: 'Add Field Mapping',
      noFieldMapping: 'No field mapping',
      noOperationData: 'No operation data settings',
      fieldMappingSaved: 'Field mapping saved successfully',
      fieldMappingSaveFailed: 'Failed to save field mapping',
      operationDataSaved: 'Operation data settings saved successfully',
      operationDataSaveFailed: 'Failed to save operation data settings',
      queryConditionGroupSaved: 'Query condition group saved successfully',
      queryConditionGroupSaveFailed: 'Failed to save query condition group',
      queryConditionSaved: 'Query condition saved successfully',
      queryConditionSaveFailed: 'Failed to save query condition',
      loadDataSetListFailed: 'Failed to load DataSet list',
      loadDataSetColumnsFailed: 'Failed to load DataSet columns',
      loadProcessVariablesFailed: 'Failed to load process variables',
      testOperation: 'Test Operation',
      testQuery: 'Test Query',
      testOperationFailed: 'Test operation failed',
      testConfigSuccess: 'Test configuration successful! Please enter simulation data in the popup to test query.',
      pleaseSelectDataSet: 'Please select DataSet first',
      pleaseSelectDataSetAndOperation: 'Please select DataSet and operation type first',
      queryResultPreview: 'DataSet Query Result Preview',
      pvSimulationData: 'PV Simulation Data',
      pvSimulationDataDescription: 'Enter test values for process variables in query conditions:',
      pvSimulationDataHelp: 'Click "Test Query" after entering test values to view results',
      queryResultDescription: 'Query results based on input simulation data (first 10 records):',
      noQueryConditions: 'No query conditions',
      fieldMappingDescription: 'Select DataSet fields and corresponding variables from existing process variables, query results will be automatically mapped to process variables',
      operationDataDescription: 'Select DataSet fields and corresponding values from process variables, INSERT/UPDATE operations will write process variable values to DataSet fields',
      fieldMappingSummary: 'Set {count} field mappings',
      operationDataSummary: 'Set {count} field mappings',
      clickToSetFieldMapping: 'Click the button above to set DataSet field to process variable mapping relationship',
      generatedWhereClause: 'Generated WHERE Clause',
      operationPreview: 'Operation Preview',
      pleaseSelectDataSetAndOperationType: 'Please select DataSet and operation type first',
      pleaseSelectOperationType: 'Please select operation type first',
      pleaseSelectDataSet: 'Please select DataSet first',
      operationData: 'Operation Data',
      fieldMapping: 'Field Mapping',
      noOperationData: 'No operation data',
      noFieldMapping: 'No field mapping'
    },
    
    eFormResultNode: 'eForm Result Node',
    defaultStartNode: 'Start',
    statusEnabled: 'Enabled',
    taskName: 'Task Name',
    taskNameLabel: 'Task Name',
    taskNamePlaceholder: 'Please enter task name',
    phoneNumberPlaceholder: 'Please enter phone number',
    clear: 'Clear',
    selectUser: 'Select User',
    selectRecipients: 'Select Recipients',
    messageWithVariablesPlaceholder: 'Please enter message content, you can use variables like {variableName}',
    availableVariables: 'Available Variables',
    variableSyntaxHelp: 'Use {variableName} syntax to insert variables',
    description: 'Description',
    descriptionPlaceholder: 'Please enter description (optional)',
    assignTo: 'Assign To',
    assignToPlaceholder: 'Please select assigned person',
    messageContent: 'Message Content',
    messageContentPlaceholder: 'Please enter message content',
    condition: 'Condition',
    conditionPlaceholder: 'Please enter condition',
    formSelection: 'Form Selection',
    formSelectionPlaceholder: 'Please select form',
    webhookUrl: 'Webhook URL',
    webhookUrlPlaceholder: 'Please enter Webhook URL',
    save: 'Save',
    saveSuccess: 'Workflow saved!',
    saveFailed: 'Save failed',
    validationErrors: 'Validation Errors',
    validationWarnings: 'Validation Warnings',
    mustHaveStartEnd: 'Workflow must contain start and end nodes',
    mustHaveConnection: 'Please create node connections',
    hasCycle: 'Circular connection detected',
    isolatedNode: 'Isolated node detected',
    startNodeNoOutput: 'Start node has no output connection',
    endNodeNoInput: 'End node has no input connection',
    cannotConnectToSelf: 'Cannot connect node to itself',
    connectionAlreadyExists: 'Connection already exists between nodes',
    workflowValidationFailed: 'Workflow validation failed',
    workflowValidationWarning: 'Workflow warning',
    continueSave: 'Continue saving?',
    back: 'Back',
    design: 'Design',
    copy: 'Copy',
    delete: 'Delete',
    confirmDelete: 'Are you sure you want to delete this workflow?',
    copySuccess: 'Workflow copied',
    deleteSuccess: 'Workflow deleted',
    deleteFailed: 'Delete failed',
    copyFailed: 'Copy failed',
    nameRequired: 'Please enter workflow name',
    descriptionRequired: 'Please enter workflow description',
    
    // Buttons and actions
    delete: 'Delete',
    clear: 'Clear',
    selectUser: 'Select User',
    selectPerson: 'Select Person',
    selectForm: 'Select Form',
    selectTemplate: 'Select Template',
    
    // Form labels and hints
    taskNameLabel: 'Task Name',
    taskNamePlaceholder: 'Enter task name',
    phoneNumberPlaceholder: 'Enter phone number (e.g.: 85296366318) or click to select user',
    selectSpecifiedPerson: 'Select specified person',
    waitReplyMessagePlaceholder: 'Enter prompt message when waiting for user reply',
    selectEFormPlaceholder: 'Select e-Form to send',
    
    // Node configuration
    replyType: 'Reply Type',
    initiator: 'Workflow Initiator',
    specifiedPerson: 'Specified Person',
    promptMessage: 'Prompt Message',
    validationConfig: 'Validation Configuration',
    validationSettings: 'Validation Settings',
    enableValidation: 'Enable Validation',
    yes: 'Yes',
    no: 'No',
    validatorType: 'Validator Type',
    defaultValidator: 'Default Validator',
    customValidator: 'Custom Validator',
    openaiValidation: 'OpenAI Validation',
    xaiValidation: 'XAI Validation',
    promptText: 'Prompt Text',
    retryMessage: 'Retry Message',
    maxRetries: 'Max Retries',
    
    // Function descriptions
    waitReplyDescription1: '1. When workflow execution reaches this node, it will pause and wait for user reply',
    waitReplyDescription2: '2. Only specified user replies will continue workflow execution',
    waitReplyDescription3: '3. If validation is enabled, it will check if user input meets requirements',
    waitReplyDescription4: '4. When validation fails, user will be asked to re-enter',
    eFormDescription1: '1. Select e-Form to send',
    eFormDescription2: '2. Select user to receive form (phone number)',
    eFormDescription3: '3. System will send form link to specified user',
    eFormDescription4: '4. User can click link to fill form',
    eFormDescription5: '5. After form submission, subsequent workflow will be triggered',
    eFormDescription6: '6. Can set approval result variable to record approval status (approve/reject/pending)',
    eFormDescription7: '7. Approval result can be used in subsequent Switch nodes for workflow branching',
    
    // Approval result collection
    approvalResultVariable: 'Approval Result Process Variable',
    selectApprovalResultVariable: 'Select process variable to record approval result',
    approvalResultInfo: 'Approval Result Information',
    approvalResultDescription1: '1. When form approval is completed, system will automatically write approval result to selected process variable',
    approvalResultDescription2: '2. Approval result values: approve (approved), reject (rejected), pending (pending approval)',
    approvalResultDescription3: '3. This variable can be used in subsequent Switch nodes for workflow branching',
    
    // sendEForm node related translations
    sendEForm: {
      fillMode: 'Form Filling Mode',
      integrateWaitReply: 'Integrate Wait Reply Node (AI Fill)',
      integrateDataSetQuery: 'Integrate DataSet Query Node (Data Fill)',
      manualFill: 'Manual Fill (Independent)',
      
      // Mode descriptions
      modeDescription: 'Mode Description',
      integrateWaitReplyDesc: 'Inherit natural language reply from previous waitReply node, use AI to intelligently fill the form',
      integrateDataSetQueryDesc: 'Use query result data from specified DataSet Query node, directly map to form fields',
      manualFillDesc: 'Send blank form to user to fill manually, no dependency on other nodes',
      
      // DataSet Query selection
      selectDataSetQueryNode: 'Select DataSet Query Node',
      selectDataSetQueryNodePlaceholder: 'Select DataSet Query node to integrate',
      noDataSetQueryNodes: 'No DataSet Query nodes available',
      dataSetQueryNodeHelp: 'Only DataSet Query nodes with SELECT operation type will be shown in this list',
      
      // Dependency check
      dependencyCheck: 'Dependency Check',
      waitReplyDependency: 'Previous node must be waitReply',
      dataSetQueryDependency: 'Specified DataSet Query node must complete execution',
      noDependency: 'No dependency on other nodes',
      
      // Warning messages
      warningNoWaitReply: 'Warning: Previous node is not waitReply, cannot use AI fill function',
      warningNoDataSetQuery: 'Warning: Cannot find specified DataSet Query node or query results',
      warningInvalidMode: 'Warning: Selected filling mode does not match workflow structure',
      
      // Notification message
      notificationMessage: 'Notification Message',
      notificationMessagePlaceholder: 'Enter notification message, can use {formName} and {formUrl} variables',
      notificationMessageHelp: 'Supported variables: {formName} - Form Name, {formUrl} - Form Link',
      defaultNotificationMessage: 'Your {formName} is ready. Please click the following link to fill it out:\n\n{formUrl}',
      customMessage: 'Custom Message',
      useDefaultMessage: 'Use Default Message',
      messageTemplate: 'Message Template',
      messageTemplatePlaceholder: 'Enter message template',
      variablePlaceholder: 'Variable Placeholder',
      formNameVariable: 'Form Name Variable',
      formUrlVariable: 'Form Link Variable'
    },
    
    // Activation method configuration
    activationConfig: 'Activation Method Configuration',
    activationType: 'Activation Method',
    manualActivation: 'Manual Activation',
    metaWebhookCall: 'Meta Webhook Call',
    scheduledTableWatch: 'Scheduled Table Watch',
    watchTable: 'Watch Table',
    queryCondition: 'Query Condition',
    checkInterval: 'Check Interval (seconds)',
    
    // Webhook related
    webhookToken: 'Webhook Token',
    webhookTokenPlaceholder: 'Please enter Webhook Token',
    webhookInfo: 'Webhook Information',
    webhookDescription1: '1. Please configure Meta Webhook URL in company settings page',
    webhookDescription2: '2. When WhatsApp message is received, system will reply with menu for user to select function',
    
    // Scheduled watch related
    scheduledTable: 'Watch Table',
    scheduledTablePlaceholder: 'Example: dbo.SoOrderManage',
    scheduledQuery: 'Query Condition',
    scheduledQueryPlaceholder: 'Example: WHERE status = \'PENDING\' AND created_at > @lastCheckTime',
    scheduledInterval: 'Check Interval',
    seconds: 'seconds',
    scheduledInfo: 'Scheduled Watch Information',
    scheduledDescription1: '1. System will periodically check changes in specified data table',
    scheduledDescription2: '2. When records matching conditions appear, this workflow will be automatically activated',
    
    // Configuration descriptions
    metaWebhookConfigTitle: 'Meta Webhook Configuration Description',
    metaWebhookConfig1: '1. Please configure Meta Webhook URL in company settings page',
    metaWebhookConfig2: '2. When WhatsApp message is received, system will reply with menu for user to select function',
    metaWebhookConfig3: '3. According to user selection, corresponding workflow will be activated',
    metaWebhookConfig4: '4. This workflow will execute after user selection',
    scheduledWatchTitle: 'Scheduled Watch Description',
    scheduledWatchDescription: 'This feature is under development and will be implemented in future versions',
    
    // Modal dialogs
    selectWhatsAppTemplate: 'Select WhatsApp Template',
    selectUser: 'Select User',
    selectEForm: 'Select e-Form',
    noTemplatesAvailable: 'No templates available, please create templates first',
    noUsersAvailable: 'No users available, please add users first',
    noEFormsAvailable: 'No e-Form templates available, please create forms first',
    internalTemplate: 'Internal Templates',
    
    // Meta Template
    metaTemplate: {
      title: 'Meta Official Templates',
      approved: 'Approved',
      pending: 'Pending',
      rejected: 'Rejected',
    },
    
    // Message Mode
    directMessage: 'Direct Message',
    useTemplate: 'Use Template',
    
    // Other UI elements
    inDevelopment: 'In Development',
    clickToSelectConnection: 'Click to select connection',
    template: 'Template',
    templateInfo: 'Template Information',
    templateId: 'Template ID:',
    templateName: 'Template Name:',
    formInfo: 'Form Information',
    formId: 'Form ID:',
    formName: 'Form Name:',
    formDescription: 'Description:',
    
    // Default values and hints
    enterValidContent: 'Please enter valid content',
    inputIncorrectRetry: 'Input incorrect, please re-enter',
    dateFormatExample: 'Example: Please enter leave date, format: YYYY-MM-DD',
    formatExample: 'Example: Format incorrect, please re-enter, example: 2024-01-15',
    tableExample: 'Example: dbo.SoOrderManage',
    queryExample: 'Example: WHERE status = \'PENDING\' AND created_at > @lastCheckTime',
    
    // Default node data
    defaultStartNode: 'Start',
    defaultEndNode: 'End',
    defaultSendWhatsAppNode: 'Send WhatsApp Message',
    defaultSendTemplateNode: 'Send WhatsApp Template',
    defaultWaitReplyNode: 'Wait for User Reply',
    defaultWaitForQRCodeNode: 'Wait for QR Code Scan',
    defaultQRCodeMessage: 'Please upload an image containing QR Code',
    defaultSwitchNode: 'Condition Branch',
    defaultDataSetQueryNode: 'DataSet Query/Update',
    defaultCallApiNode: 'Trigger External API',
    defaultSendEFormNode: 'Send e-Form',
    defaultEFormResultNode: 'e-Form Approved/Rejected',
    
    // Validation messages
    defaultReplyMessage: 'Please enter your reply',
    defaultValidationPrompt: 'Please enter valid content',
    defaultRetryMessage: 'Input is incorrect, please re-enter',
    
    // Comment descriptions
    specifiedUsersComment: 'Phone numbers of specified personnel, separated by commas',
    scheduledIntervalComment: '5 minutes',
    
    // Status and other labels
    statusEnabled: 'Enabled',
    statusDisabled: 'Disabled',
    designer: 'Designer',
    functionDescription: 'Function Description',
    
    // Error messages
    saveFailed: 'Save failed',
    updateFailed: 'Update failed',
    createFailed: 'Create failed',
    getTemplatesFailed: 'Failed to get templates',
    unknownError: 'Unknown error',
    
    // Validation error messages
    missingStartNode: 'Missing start node (Start)',
    missingEndNode: 'Missing end node (End)',
    noConnections: 'No connections',
    circularConnection: 'Circular connection detected: node "{nodeName}" is involved in a cycle',
    isolatedNodes: 'Isolated nodes detected: {nodeNames}',
    startNodeNoOutput: 'Start node "{nodeName}" has no output connection',
    endNodeNoInput: 'End node "{nodeName}" has no input connection',
    
    // Node type descriptions
    nodeDescriptions: {
      start: 'Start point of workflow, only one allowed',
      end: 'End point of workflow, multiple allowed',
      waitReply: 'Node that waits for user reply',
      sendMessage: 'Node that sends message to user',
      condition: 'Node that decides workflow direction based on conditions',
      form: 'Node that displays form for user to fill',
      webhook: 'Node that calls external API'
    },
    // Node configuration descriptions
    nodeConfigDescriptions: {
      waitReply: '1. When workflow execution reaches this node, it will pause and wait for user reply\n2. Only specified user replies will continue workflow execution',
      sendMessage: '1. Send message to user\n2. Can include text, images, files, etc.\n3. Supports variable substitution',
      condition: '1. Decide next workflow step based on conditions\n2. Supports multiple branches\n3. Can judge based on user input, time, and other conditions',
      form: '1. Display form for user to fill\n2. Supports multiple form types\n3. After form submission, subsequent workflow will be triggered',
      webhook: '1. Call external API\n2. Can send data to other systems\n3. Decide workflow direction based on API response'
    },
    // Workflow initiator options
    initiatorOptions: {
      initiator: 'Workflow Initiator',
      anyUser: 'Any User',
      specificUser: 'Specific User'
    },
    
    // Missing translation keys
    conditionLabel: 'Condition Label',
    conditionLabelPlaceholder: 'Please enter condition label (optional)',
    cancel: 'Cancel',
    add: 'Add',
    selectDefaultPath: 'Select Default Path',
    defaultPath: 'Default Path',
    defaultPathDescription: 'When all condition groups are not met, this default path will be executed',
    conditionValuePlaceholder: 'Please enter condition value',
    selectProcessVariable: 'Select Process Variable',
    qrCodeVariable: 'QR Code Variable',
    qrCodeMessagePlaceholder: 'Enter prompt message, e.g.: Please upload an image containing QR Code',
    qrCodeDescription1: 'This node will wait for user to upload an image containing QR Code',
    qrCodeDescription2: 'System will automatically scan the QR Code in the image and extract content',
    qrCodeDescription3: 'Scan result will be saved to the specified process variable for use by subsequent nodes',
    qrCodeSuccessMessage: 'QR Code Success Message',
    qrCodeErrorMessage: 'QR Code Error Message',
    seconds: 'seconds',
    messageWithVariablesPlaceholder: 'Enter message content, use ${variableName} to reference process variables',
    availableVariables: 'Available Variables',
    variableSyntaxHelp: 'Click variable tags to insert into message, use ${variableName} syntax',
    switchConditions: 'Condition Settings',
    equals: 'Equals',
    notEquals: 'Not Equals',
    greaterThan: 'Greater Than',
    lessThan: 'Less Than',
    contains: 'Contains',
    isEmpty: 'Is Empty',
    isNotEmpty: 'Is Not Empty',
    conditionValue: 'Condition Value',
    conditionLabel: 'Condition Label',
    remove: 'Remove',
    addCondition: 'Add Condition',
    newCondition: 'New Condition',
    defaultPath: 'Default Path',
    defaultPathPlaceholder: 'Path when all conditions are not met',
    switchDescription1: 'This node decides execution path based on process variable values',
    switchDescription2: 'Can set multiple conditions, system will check each condition in order',
    switchDescription3: 'If all conditions are not met, default path will be executed',
    timeout: 'Timeout',
    condition1: 'Condition 1',
    
    // Switch node new UI translation keys
    conditionGroups: 'Condition Groups',
    conditionGroup: 'Condition Group',
    conditions: 'Conditions',
    outputPath: 'Output Path',
    selectOutputPath: 'Select Output Path',
    selectDefaultPath: 'Select Default Path',
    addConditionGroup: 'Add Condition Group',
    
    // Image related
    loadingImages: 'Loading images...',
    noImagesReceived: 'No images received',
    imagePreview: 'Image Preview',
    previewImage: 'Preview Image',
    downloadImage: 'Download Image',
    imageLoadFailed: 'Image load failed',
    imageStatusSuccess: 'Success',
    imageStatusFailed: 'Failed',
    imageStatusProcessing: 'Processing',
    imageStatusPending: 'Pending',
    imagesApiNotExists: 'Images API does not exist',
    imagesApiNotImplemented: 'Images API not implemented',
    loadImagesFailed: 'Load images failed',
    loadedImagesData: 'Loaded images data',
    loadingImagesData: 'Loading images data',
    previousImage: 'Previous Image',
    nextImage: 'Next Image',
    flipVertical: 'Flip Vertical',
    flipHorizontal: 'Flip Horizontal',
    rotateLeft: 'Rotate Left',
    rotateRight: 'Rotate Right',
    zoomOut: 'Zoom Out',
    zoomIn: 'Zoom In',
    editCondition: 'Edit Condition',
    operator: 'Operator',
    operatorRequired: 'Please select operator',
    selectProcessVariableRequired: 'Please select process variable',
    noProcessVariables: 'No process variables available',
    noProcessVariablesHint: 'Please create process variables in process variable management first',
    conditionValueRequired: 'Please enter condition value',
    conditionValuePlaceholder: 'Please enter condition value',
    conditionLabelPlaceholder: 'Please enter condition label (optional)',
    cancel: 'Cancel',
    update: 'Update',
    add: 'Add',
    
    // Switch node new UI translation keys
    conditionGroups: 'Condition Groups',
    conditionGroup: 'Condition Group',
    addConditionGroup: 'Add Condition Group',
    clickToSelectDefaultPath: 'Click to select default path',
    
    // QR Code node translation keys
    qrCodeErrorMessage: 'QR Code Error Message',
    
    // Alignment functions
    alignNodes: 'Align Nodes',
    alignLeft: 'Left Align',
    alignCenter: 'Center Align',
    alignRight: 'Right Align',
    alignTop: 'Top Align',
    alignMiddle: 'Vertical Center',
    alignBottom: 'Bottom Align'
  },
  
  // Workflow Monitor
  workflowMonitor: {
    title: 'Workflow Monitor',
    description: 'Monitor and manage your WhatsApp workflow instances',
    runningAppsTitle: 'Running Apps',
    runningAppsDescription: 'Monitor the status of running workflow applications',
    overview: 'Overview',
    activeInstances: 'Active Instances',
    completedInstances: 'Completed Instances',
    failedInstances: 'Failed Instances',
    totalInstances: 'Total Instances',
    runningInstances: 'Running Instances',
    waitingInstances: 'Waiting Instances',
    errorInstances: 'Error Instances',
    
    // Instance List
    instanceList: 'Instance List',
    workflowName: 'Workflow Name',
    instanceId: 'Instance ID',
    status: 'Status',
    currentStep: 'Current Step',
    startedAt: 'Started At',
    endedAt: 'Ended At',
    duration: 'Duration',
    createdBy: 'Created By',
    errorMessage: 'Error Message',
    
    // Statistics Cards
    totalInstancesCount: 'Total Instances',
    runningCount: 'Running',
    completedCount: 'Completed',
    successRate: 'Success Rate',
    
    // Status
    statusRunning: 'Running',
    statusCompleted: 'Completed',
    statusFailed: 'Failed',
    statusWaiting: 'Waiting',
    statusPaused: 'Paused',
    statusCancelled: 'Cancelled',
    statusPending: 'Pending',
    statusSent: 'Sent',
    statusDelivered: 'Delivered',
    statusRead: 'Read',
    statusPartiallyFailed: 'Partially Failed',
    
    // Actions
    viewDetails: 'View Details',
    pause: 'Pause',
    resume: 'Resume',
    cancel: 'Cancel',
    retry: 'Retry',
    viewLogs: 'View Logs',
    
    // Filters
    filterAll: 'All',
    filterRunning: 'Running',
    filterCompleted: 'Completed',
    filterFailed: 'Failed',
    filterWaiting: 'Waiting',
    searchPlaceholder: 'Search workflow name, instance ID...',
    selectStatus: 'Select Status',
    startDateRange: 'Start Date Range',
    endDateRange: 'End Date Range',
    refresh: 'Refresh',
    autoRefreshSettings: 'Auto Refresh Settings',
    
    // Instance Details
    instanceDetails: 'Instance Details',
    basicInfo: 'Basic Information',
    executionHistory: 'Execution History',
    stepDetails: 'Step Details',
    formInstances: 'Form Instances',
    receivedImages: 'Received Images',
    inputData: 'Input Data',
    outputData: 'Output Data',
    processVariables: 'Process Variables',
    workflowStarted: 'Workflow Started',
    workflowCompleted: 'Workflow Completed',
    executionStep: 'Execution Step',
    stepStatus: 'Status',
    stepStartTime: 'Start Time',
    stepEndTime: 'End Time',
    information: 'Information',
    error: 'Error',
    
    // Message Send Details
    viewMessageSendStatus: 'View Send Status',
    viewFormInstance: 'View Form Instance',
    viewEmbedded: 'View Form Instance',
    loadingFormInstance: 'Loading form instance...',
    close: 'Close',
    openInNewTab: 'Open in new tab',
    viewDataSet: 'View Dataset',
    messageSendDetails: 'Message Send Details',
    messageSendStatusDetails: 'Message Send Status Details',
    sendOverview: 'Send Overview',
    recipientDetails: 'Recipient Details',
    statusAnalysis: 'Status Analysis',
    totalRecipients: 'Total Recipients',
    sentCount: 'Sent',
    deliveredCount: 'Delivered',
    readCount: 'Read',
    failedCount: 'Failed',
    pendingCount: 'Pending',
    sendBasicInfo: 'Send Basic Information',
    sendRecordId: 'Send Record ID',
    messageSendId: 'Message Send ID',
    workflowExecutionId: 'Workflow Execution ID',
    nodeId: 'Node ID',
    nodeType: 'Node Type',
    messageType: 'Message Type',
    totalRecipientsCount: 'Total Recipients',
    successSendCount: 'Success Send Count',
    successCount: 'Success Count',
    failedSendCount: 'Failed Send Count',
    startTime: 'Start Time',
    endTime: 'End Time',
    completedAt: 'Completed At',
    messageContent: 'Message Content',
    errorInfo: 'Error Information',
    recipient: 'Recipient',
    recipientName: 'Recipient',
    recipientType: 'Type',
    recipientStatus: 'Status',
    type: 'Type',
    whatsAppMessageId: 'WhatsApp Message ID',
    whatsappMessageId: 'WhatsApp Message ID',
    sentAt: 'Sent At',
    sendTime: 'Send Time',
    deliveredAt: 'Delivered At',
    deliveredTime: 'Delivered Time',
    readAt: 'Read At',
    readTime: 'Read Time',
    retryCount: 'Retry Count',
    errorMessage: 'Error Message',
    sendStatusDistribution: 'Send Status Distribution',
    timeAnalysis: 'Time Analysis',
    sendStartTime: 'Send Start Time',
    sendEndTime: 'Send End Time',
    sendCompleteTime: 'Send Complete Time',
    totalSendTime: 'Total Send Time',
    sendSuccessRate: 'Success Rate',
    deliveryRate: 'Delivery Rate',
    user: 'User',
    contact: 'Contact',
    group: 'Group',
    hashtag: 'Hashtag',
    initiator: 'Initiator',
    phoneNumber: 'Phone Number',
    recipientTypeUser: 'User',
    recipientTypeContact: 'Contact',
    recipientTypeGroup: 'Group',
    recipientTypeHashtag: 'Hashtag',
    recipientTypeInitiator: 'Initiator',
    recipientTypePhoneNumber: 'Phone Number',
    pending: 'Pending',
    sent: 'Sent',
    delivered: 'Delivered',
    read: 'Read',
    failed: 'Failed',
    retrying: 'Retrying',
    
    // Status labels
    statusRunning: 'Running',
    statusCompleted: 'Completed',
    statusFailed: 'Failed',
    statusWaiting: 'Waiting',
    statusPaused: 'Paused',
    statusCancelled: 'Cancelled',
    
    // Time units
    minutes: 'minutes',
    hours: 'hours',
    
    // Operation results
    operationSuccess: 'Operation successful',
    operationFailed: 'Operation failed',
    loadInstancesFailed: 'Failed to load instances',
    loadStatisticsFailed: 'Failed to load statistics',
    loadDetailsFailed: 'Failed to load details',
    loadMessageSendDetailsFailed: 'Failed to load message send details',
    loadMessageSendStatusFailed: 'Failed to load message send status',
    
    // Form status
    pendingApproval: 'Pending Approval',
    approved: 'Approved',
    rejected: 'Rejected',
    
    // eForm status
    eformStatusPending: 'Pending',
    eformStatusApproved: 'Approved',
    eformStatusRejected: 'Rejected',
    eformStatusSubmitted: 'Submitted',
    
    // Boolean values
    yes: 'Yes',
    no: 'No',
    
    // Variable related
    variableName: 'Variable Name',
    dataType: 'Data Type',
    description: 'Description',
    currentValue: 'Current Value',
    defaultValue: 'Default Value',
    setTime: 'Set Time',
    setBy: 'Set By',
    sourceType: 'Source Type',
    sourceReference: 'Source Reference',
    required: 'Required',
    hasValue: 'Has Value',
    noValue: 'No Value',
    
    // Form instances
    formInstance: 'Form Instance',
    formBasicInfo: 'Form Basic Information',
    formContent: 'Form Content',
    formName: 'Form Name',
    instanceName: 'Instance Name',
    fillType: 'Fill Type',
    createdAt: 'Created At',
    userInput: 'User Input',
    approvalBy: 'Approval By',
    approvalTime: 'Approval Time',
    approvalNote: 'Approval Note',
    unnamedForm: 'Unnamed Form',
    unnamed: 'Unnamed',
    loadingEformInstances: 'Loading form instances...',
    loadingEmbeddedFormInstance: 'Loading embedded form instance...',
    loadedEmbeddedFormInstance: 'Embedded form instance loaded',
    loadEmbeddedFormInstanceFailed: 'Failed to load embedded form instance',
    loadFormInstanceFailed: 'Failed to load form instance',
    cannotLoadFormInstance: 'Cannot load form instance',
    setAt: 'Set At',
    
    // Others
    noStepExecutionRecords: 'No step execution records',
    loadingProcessVariables: 'Loading process variables...',
    loadingFormInstances: 'Loading form instances...',
    noProcessVariables: 'No process variables',
    noEformInstances: 'No form instances',
    noFormInstances: 'No form instances',
    selectedInstances: 'Selected {count} instances',
    paginationTotal: 'Showing {start} to {end} of {total} items',
    pageRange: 'Page {start}-{end} of {total} items',
    itemsPerPage: '/ page',
    jumpTo: 'Go to',
    page: 'Page',
    confirm: 'OK',
    whatsappChat: 'WhatsApp Chat',
    openSettingsModal: 'Open settings modal',
    cannotFindMessageSendId: 'Cannot find message send record ID, please check backend data',
    time: 'Time',
    userResponse: 'User Response',
    error: 'Error',
    step: 'Step',
    
    // Instance list
    instanceList: 'Instance List',
    workflowName: 'Workflow Name',
    instanceId: 'Instance ID',
    status: 'Status',
    currentStep: 'Current Step',
    startedAt: 'Started At',
    endedAt: 'Ended At',
    duration: 'Execution Time',
    createdBy: 'Created By',
    errorMessage: 'Error Message',
    
    // Status
    statusRunning: 'Running',
    statusCompleted: 'Completed',
    statusFailed: 'Failed',
    statusWaiting: 'Waiting',
    statusPaused: 'Paused',
    statusCancelled: 'Cancelled',
    
    // Actions
    viewDetails: 'View Details',
    pause: 'Pause',
    resume: 'Resume',
    cancel: 'Cancel',
    retry: 'Retry',
    viewLogs: 'View Logs',
    
    // Filters
    filterAll: 'All',
    filterRunning: 'Running',
    filterCompleted: 'Completed',
    filterFailed: 'Failed',
    filterWaiting: 'Waiting',
    searchPlaceholder: 'Search workflow name, instance ID...',
    
    // Instance details
    instanceDetails: 'Instance Details',
    basicInfo: 'Basic Information',
    executionHistory: 'Execution History',
    stepDetails: 'Step Details',
    formInstances: 'Form Instances',
    inputData: 'Input Data',
    outputData: 'Output Data',
    
    // Step details
    stepIndex: 'Step Index',
    stepType: 'Step Type',
    stepStatus: 'Step Status',
    stepStartedAt: 'Started At',
    stepEndedAt: 'Ended At',
    stepDuration: 'Execution Time',
    stepInput: 'Input Data',
    stepOutput: 'Output Data',
    stepError: 'Error Message',
    
    // Form instances
    formName: 'Form Name',
    formStatus: 'Form Status',
    formSubmittedAt: 'Submitted At',
    formApprovedAt: 'Approved At',
    formRejectedAt: 'Rejected At',
    formApprovedBy: 'Approved By',
    formRejectedBy: 'Rejected By',
    formApprovalNote: 'Approval Note',
    formRejectNote: 'Rejection Note',
    
    // Statistics
    statistics: 'Statistics',
    todayInstances: 'Today Instances',
    weekInstances: 'This Week Instances',
    monthInstances: 'This Month Instances',
    averageExecutionTime: 'Average Execution Time',
    successRate: 'Success Rate',
    errorRate: 'Error Rate',
    
    // Action confirmations
    confirmPause: 'Are you sure you want to pause this workflow instance?',
    confirmResume: 'Are you sure you want to resume this workflow instance?',
    confirmCancel: 'Are you sure you want to cancel this workflow instance?',
    confirmRetry: 'Are you sure you want to retry this workflow instance?',
    
    // Action results
    pauseSuccess: 'Workflow instance paused',
    resumeSuccess: 'Workflow instance resumed',
    cancelSuccess: 'Workflow instance cancelled',
    retrySuccess: 'Workflow instance retry started',
    operationFailed: 'Operation failed',
    
    // Real-time updates
    realTimeUpdate: 'Real-time Updates',
    autoRefresh: 'Auto Refresh',
    refreshInterval: 'Refresh Interval',
    lastUpdated: 'Last Updated',
    
    // Export functionality
    exportData: 'Export Data',
    exportToExcel: 'Export to Excel',
    exportToCsv: 'Export to CSV',
    exportToPdf: 'Export to PDF',
    
    // Batch operations
    batchOperations: 'Batch Operations',
    batchPause: 'Batch Pause',
    batchResume: 'Batch Resume',
    batchCancel: 'Batch Cancel',
    selectInstances: 'Select Instances',
    selectedCount: 'Selected {count} instances',
    
    // Log viewing
    executionLogs: 'Execution Logs',
    logLevel: 'Log Level',
    logTime: 'Time',
    logMessage: 'Message',
    logDetails: 'Details',
    
    // Performance monitoring
    performanceMetrics: 'Performance Metrics',
    responseTime: 'Response Time',
    throughput: 'Throughput',
    resourceUsage: 'Resource Usage',
    memoryUsage: 'Memory Usage',
    cpuUsage: 'CPU Usage',
    
    // Error handling
    errorHandling: 'Error Handling',
    errorCount: 'Error Count',
    errorTrend: 'Error Trend',
    errorDetails: 'Error Details',
    errorResolution: 'Error Resolution',
    
    // Notification settings
    notifications: 'Notification Settings',
    emailNotifications: 'Email Notifications',
    smsNotifications: 'SMS Notifications',
    webhookNotifications: 'Webhook Notifications',
    notificationEvents: 'Notification Events',
    notifyOnError: 'Notify on Error',
    notifyOnCompletion: 'Notify on Completion',
    notifyOnDelay: 'Notify on Delay',
    
    // Media files related
    receivedMedia: 'Received Media',
    loadingMediaFiles: 'Loading media files...',
    noMediaFiles: 'No media files',
    mediaFilesApiNotExists: 'Media files API does not exist',
    mediaFilesApiNotImplemented: 'Media files API not implemented',
    loadMediaFilesFailed: 'Load media files failed',
    loadedMediaFilesData: 'Loaded media files data',
    rootFolder: 'Root Folder',
    files: 'files',
    totalFiles: 'Total Files',
    image: 'Image',
    video: 'Video',
    audio: 'Audio',
    document: 'Document',
    file: 'File',
    view: 'View',
    download: 'Download',
    unnamed: 'Unnamed',
    
    // Lightbox toolbar
    rotateLeft: 'Rotate Left',
    rotateRight: 'Rotate Right',
    flipHorizontal: 'Flip Horizontal',
    flipVertical: 'Flip Vertical',
    zoomIn: 'Zoom In',
    zoomOut: 'Zoom Out',
    reset: 'Reset',
    
    // User replies (message validations)
    userReplies: 'User Replies',
    validationPassed: 'Valid',
    validationFailed: 'Invalid',
    others: 'Others',
    caption: 'Caption: ',
    reply: 'reply',
    replies: 'replies'
  },

  // Workflow List Page
  workflowList: {
    add: 'Add',
    batchDelete: 'Batch Delete',
    batchEnable: 'Batch Enable',
    batchDisable: 'Batch Disable',
    clearFilter: 'Clear Filter',
    manualStart: 'Manual Start',
    select: 'Select',
    clear: 'Clear',
    confirmBatchDelete: 'Confirm Batch Delete',
    confirmBatchEnable: 'Confirm Batch Enable',
    confirmBatchDisable: 'Confirm Batch Disable',
    confirmDelete: 'Confirm Delete',
    cancel: 'Cancel',
    confirmDeleteSelected: 'Are you sure you want to delete the selected',
    confirmEnableSelected: 'Are you sure you want to enable the selected',
    confirmDisableSelected: 'Are you sure you want to disable the selected',
    workflows: ' workflows',
    cannotBeUndone: 'This action cannot be undone!',
    successfullyDeleted: 'Successfully deleted',
    successfullyEnabled: 'Successfully enabled',
    successfullyDisabled: 'Successfully disabled',
    batchDeleteFailed: 'Batch delete failed',
    batchOperationFailed: 'Batch operation failed',
    pleaseSelectWorkflows: 'Please select workflows to delete',
    pleaseSelectWorkflowsToOperate: 'Please select workflows to operate on',
    workflowStarted: 'Successfully started',
    manualStartMessage: 'Manually started workflow'
  },

  // Process Variables Management
  processVariables: {
    title: 'Process Variables Management',
    variableList: 'Process Variables List',
    addVariable: 'Add Variable',
    editVariable: 'Edit Variable',
    deleteVariable: 'Delete Variable',
    createVariable: 'Create Variable',
    updateVariable: 'Update Variable',
    cancel: 'Cancel',
    save: 'Save',
    
    // Variable Properties
    variableName: 'Variable Name',
    displayName: 'Display Name',
    dataType: 'Data Type',
    description: 'Description',
    isRequired: 'Is Required',
    defaultValue: 'Default Value',
    validationRules: 'Validation Rules',
    jsonSchema: 'JSON Schema',
    
    // Data Type Options
    dataTypeString: 'String (string)',
    dataTypeInt: 'Integer (int)',
    dataTypeDecimal: 'Decimal (decimal)',
    dataTypeDatetime: 'Date Time (datetime)',
    dataTypeBoolean: 'Boolean (boolean)',
    dataTypeText: 'Long Text (text)',
    dataTypeJson: 'JSON Object (json)',
    
    // Form Placeholders
    variableNamePlaceholder: 'e.g.: customer_name',
    displayNamePlaceholder: 'e.g.: Customer Name',
    descriptionPlaceholder: 'Describe the purpose of this variable',
    defaultValuePlaceholder: 'Default value for the variable',
    validationRulesPlaceholder: 'JSON format validation rules',
    jsonSchemaPlaceholder: 'JSON Schema definition (required for JSON type only)',
    
    // Validation Messages
    variableNameRequired: 'Please enter variable name',
    variableNamePattern: 'Variable name can only contain letters, numbers and underscores, and cannot start with a number',
    dataTypeRequired: 'Please select data type',
    
    // Status Labels
    required: 'Required',
    optional: 'Optional',
    
    // Operation Results
    createSuccess: 'Process variable created successfully',
    updateSuccess: 'Process variable updated successfully',
    deleteSuccess: 'Process variable deleted successfully',
    createFailed: 'Process variable creation failed',
    updateFailed: 'Process variable update failed',
    deleteFailed: 'Process variable deletion failed',
    saveFailed: 'Save process variable failed',
    fetchFailed: 'Failed to fetch process variables',
    
    // Confirmation Dialogs
    confirmDelete: 'Are you sure you want to delete this process variable?',
    confirmDeleteOk: 'Confirm',
    confirmDeleteCancel: 'Cancel',
    
    // Empty States
    noVariables: 'No process variables yet, click "Add Variable" to start creating',
    noDisplayName: 'No display name',
    selectVariableToEdit: 'Please select a process variable to edit, or click "Add Variable" to create a new process variable',
    
    // Management Button
    manageProcessVariables: 'Manage Process Variables'
  },

  // Published Apps Page
  publishedApps: {
    title: 'Published Apps',
    description: 'Display all enabled workflow applications that support manual startup',
    totalApps: 'Total Apps',
    manualTriggerWorkflows: 'Manual Trigger Workflows',
    autoTriggerWorkflows: 'Auto Trigger Workflows',
    noManualWorkflows: 'No manual trigger workflows available',
    noAutoWorkflows: 'No auto trigger workflows available',
    loading: 'Loading published apps...',
    executionCount: 'Execution Count',
    creator: 'Creator',
    clickToStart: 'Click to Start',
    starting: 'Starting...',
    autoOnly: 'Auto Only',
    unknown: 'Unknown',
    manual: 'Manual',
    auto: 'Auto',
    startWorkflowSuccess: 'Workflow "{name}" started successfully',
    startWorkflowFailed: 'Failed to start workflow',
    loadAppsFailed: 'Failed to load published apps',
    noDescription: 'No description',
    mockCustomerService: 'Customer Service Workflow',
    mockCustomerServiceDesc: 'Standardized process for handling customer inquiries and complaints',
    mockOrderProcess: 'Order Processing Workflow',
    mockOrderProcessDesc: 'Complete process from order receipt to shipment',
    mockPaymentConfirm: 'Payment Confirmation Workflow',
    mockPaymentConfirmDesc: 'Process for handling payment confirmation and invoice generation',
    mockAutoNotification: 'Auto Notification Workflow',
    mockAutoNotificationDesc: 'System automatically sends notifications'
  },

  // Data Set Management Page
  dataSetManagement: {
    title: 'Dataset Management',
    add: 'Add',
    createDataSet: 'Create Data Set',
    editDataSet: 'Edit Data Set',
    createDataSetTitle: 'Create Data Set',
    editDataSetTitle: 'Edit Data Set',
    save: 'Save',
    cancel: 'Cancel',
    
    // Table column headers
    name: 'Name',
    dataSourceType: 'Data Source Type',
    status: 'Status',
    recordCount: 'Record Count',
    lastUpdate: 'Last Update',
    actions: 'Actions',
    
    // Status labels
    active: 'Active',
    inactive: 'Inactive',
    error: 'Error',
    
    // Data source types
    sql: 'SQL',
    excel: 'EXCEL',
    googleDocs: 'GOOGLE_DOCS',
    
    // Data source type options (complete text)
    sqlQuery: 'SQL Query',
    excelFile: 'EXCEL File',
    googleDocsOption: 'GOOGLE_DOCS',
    
    // Action buttons
    viewRecords: 'View Records',
    syncData: 'Sync Data',
    edit: 'Edit',
    delete: 'Delete',
    
    // Confirmation dialogs
    confirmDelete: 'Are you sure you want to delete this DataSet?',
    confirmDeleteOk: 'Confirm',
    confirmDeleteCancel: 'Cancel',
    
    // Pagination
    totalRecords: 'Total {total} records',
    pageSizeOptions: ['10', '20', '50', '100'],
    
    // Tabs
    basicInfo: 'Basic Information',
    dataSourceConfig: 'Data Source Configuration',
    columnDefinition: 'Column Definition',
    
    // Basic information form
    nameLabel: 'Name',
    namePlaceholder: 'Enter Data Set name',
    nameRequired: 'Please enter name',
    description: 'Description',
    descriptionPlaceholder: 'Enter description',
    isScheduled: 'Scheduled Update',
    updateInterval: 'Update Interval (minutes)',
    updateIntervalPlaceholder: 'e.g.: 60 (1 hour)',
    updateIntervalRequired: 'Please set update interval',
    
    // Data source configuration
    dataSourceTypeLabel: 'Data Source Type',
    dataSourceTypePlaceholder: 'Select data source type',
    dataSourceTypeRequired: 'Please select data source type',
    dataSourceTypeInfo: 'Data Source Type Settings',
    dataSourceTypeDescription: 'Please select the data source type in the "Data Source Configuration" tab and configure accordingly.',
    
    // SQL configuration
    connectionType: 'Connection Type',
    usePresetConnection: 'Use Preset Connection',
    customConnection: 'Custom Connection',
    presetDatabaseConnection: 'Preset Database Connection',
    presetConnectionPlaceholder: 'Select database connection',
    erpDatabase: 'ERP Database',
    purpleRiceDatabase: 'Purple Rice Database',
    serverName: 'Server Name/IP',
    serverNamePlaceholder: 'e.g.: 192.168.1.100',
    serverNameRequired: 'Please enter server name or IP',
    port: 'Port',
    portPlaceholder: 'e.g.: 1433',
    databaseName: 'Database Name',
    databaseNamePlaceholder: 'e.g.: MyDatabase',
    databaseNameRequired: 'Please enter database name',
    authenticationType: 'Authentication Type',
    sqlServerAuth: 'SQL Server Authentication',
    windowsAuth: 'Windows Authentication',
    username: 'Username',
    usernamePlaceholder: 'e.g.: sa',
    usernameRequired: 'Please enter username',
    password: 'Password',
    passwordPlaceholder: 'Enter password',
    passwordRequired: 'Please enter password',
    additionalOptions: 'Additional Connection Options',
    additionalOptionsPlaceholder: 'e.g.: TrustServerCertificate=true;MultipleActiveResultSets=true',
    connectionTest: 'Connection Test',
    connectionTestDescription: 'After configuration, you can click the button below to test the connection.',
    testConnection: 'Test Connection',
    sqlQuery: 'SQL Query Statement',
    sqlQueryPlaceholder: 'SELECT * FROM table_name WHERE condition',
    sqlQueryRequired: 'Please enter SQL query statement',
    sqlParameters: 'SQL Parameters (JSON format)',
    sqlParametersPlaceholder: '{"param1": "value1", "param2": "value2"}',
    
    // Excel configuration
    excelFilePath: 'Excel File Path',
    excelFilePathPlaceholder: 'e.g.: /uploads/excel/data.xlsx',
    excelSheetName: 'Sheet Name',
    excelSheetNamePlaceholder: 'Select sheet',
    excelUrl: 'Excel File URL',
    excelUrlPlaceholder: 'e.g.: https://example.com/data.xlsx',
    uploadExcelFile: 'Upload Excel File',
    excelUploadDescription: 'Excel Upload Instructions',
    excelUploadInfo: 'After successful upload, the file path will be automatically filled. After saving the DataSet, click the "Sync Data" button to import Excel data into the database. The system will automatically generate column definitions based on Excel headers.',
    
    // Google Docs configuration
    googleDocsUrl: 'Google Docs URL',
    googleDocsUrlPlaceholder: 'https://docs.google.com/spreadsheets/d/...',
    googleDocsUrlRequired: 'Please enter Google Docs URL',
    googleDocsSheetName: 'Sheet Name',
    googleDocsSheetNamePlaceholder: 'e.g.: Sheet1',
    googleDocsIntegration: 'Google Docs Integration Instructions',
    googleDocsIntegrationDescription: 'Please ensure that the Google Docs file is set to publicly readable, or configure appropriate authentication information.',
    
    // Auto update
    autoUpdate: 'Auto Update',
    autoUpdateInterval: 'Update Interval (minutes)',
    autoUpdateIntervalPlaceholder: 'e.g.: 60 (1 hour)',
    autoUpdateIntervalRequired: 'Please set update interval',
    
    // Column definition
    columnDefinitionDescription: 'Column Definition Instructions',
    columnDefinitionInfo: 'For Excel data sources, the system will automatically generate column definitions based on Excel headers. You can manually adjust column properties after syncing data.',
    columnName: 'Column Name',
    columnNamePlaceholder: 'e.g.: customer_id',
    columnNameRequired: 'Please enter column name',
    displayName: 'Display Name',
    displayNamePlaceholder: 'e.g.: Customer ID',
    dataType: 'Data Type',
    dataTypePlaceholder: 'Select data type',
    dataTypeRequired: 'Please select data type',
    string: 'String',
    int: 'Integer',
    decimal: 'Decimal',
    datetime: 'DateTime',
    boolean: 'Boolean',
    isPrimaryKey: 'Primary Key',
    isPrimaryKeyNormal: 'Normal',
    isSearchable: 'Searchable',
    isSearchableNot: 'Not Searchable',
    isSortable: 'Sortable',
    isSortableNot: 'Not Sortable',
    isIndexed: 'Indexed',
    isIndexedNot: 'Not Indexed',
    defaultValue: 'Default Value',
    defaultValuePlaceholder: 'Default value',
    sortOrder: 'Sort Order',
    addColumn: 'Add Column',
    removeColumn: 'Remove',
    
    // Record viewing
    dataRecords: 'Data Records',
    advancedSearch: 'Advanced Search',
    refresh: 'Refresh',
    recordId: 'ID',
    primaryKeyValue: 'Primary Key Value',
    recordStatus: 'Status',
    createdAt: 'Created At',
    nA: 'N/A',
    
    // Advanced search
    advancedSearchTitle: 'Advanced Search',
    searchConditions: 'Search Conditions',
    columnNameLabel: 'Column Name',
    columnNamePlaceholder: 'Select column',
    columnNameRequired: 'Please select column',
    operator: 'Operator',
    operatorPlaceholder: 'Select operator',
    operatorRequired: 'Please select operator',
    equals: 'Equals',
    contains: 'Contains',
    greaterThan: 'Greater Than',
    lessThan: 'Less Than',
    dateRange: 'Date Range',
    value: 'Value',
    valuePlaceholder: 'Enter search value',
    valueRequired: 'Please enter value',
    addSearchCondition: 'Add Search Condition',
    removeSearchCondition: 'Remove',
    sortBy: 'Sort By',
    sortByPlaceholder: 'Select sort column',
    sortOrder: 'Sort Order',
    ascending: 'Ascending',
    descending: 'Descending',
    executeSearch: 'Execute Search',
    
    // Operation result messages
    deleteSuccess: 'Delete successful',
    deleteFailed: 'Delete failed',
    syncSuccess: 'Sync successful! Processed {count} records',
    syncFailed: 'Sync failed',
    createSuccess: 'Create successful',
    updateSuccess: 'Update successful',
    operationFailed: 'Operation failed',
    fetchFailed: 'Failed to fetch DataSet list',
    fetchRecordsFailed: 'Failed to fetch records',
    searchFailed: 'Search failed',
    foundRecords: 'Found {count} records',
    
    // Error messages
    pleaseSelectDataSourceType: 'Please select data source type',
    pleaseEnterName: 'Please enter name',
    pleaseEnterServerName: 'Please enter server name or IP',
    pleaseEnterDatabaseName: 'Please enter database name',
    pleaseEnterUsername: 'Please enter username',
    pleaseEnterPassword: 'Please enter password',
    pleaseEnterSqlQuery: 'Please enter SQL query statement first',
    pleaseSelectPresetConnection: 'Please select preset connection',
    pleaseEnterGoogleDocsUrl: 'Please enter Google Docs URL',
    pleaseEnterColumnName: 'Please enter column name',
    pleaseSelectDataType: 'Please select data type',
    pleaseSelectColumn: 'Please select column',
    pleaseSelectOperator: 'Please select operator',
    pleaseEnterValue: 'Please enter value',
    
    // File upload
    onlyExcelFiles: 'Only Excel files can be uploaded!',
    fileSizeLimit: 'File size cannot exceed 10MB!',
    uploadSuccess: 'Upload successful',
    uploadFailed: 'Upload failed',
    processingFile: 'Processing file, please wait...',
    getSheetNamesFailed: 'Failed to get sheet names',
    getColumnPreviewFailed: 'Failed to get column preview',
    autoGeneratedColumns: 'Auto-generated {count} column definitions',
    cannotAutoGenerateColumns: 'Cannot auto-generate column definitions',
    pleaseManuallyConfigure: 'Please configure manually',
    
    // Connection test
    testingConnection: 'Testing connection...',
    connectionTestSuccess: 'Connection test successful! Getting column definitions...',
    connectionTestFailed: 'Connection test failed',
    presetConnectionConfigured: 'Preset connection configured',
    whatoFlowDatabase: 'WhatoFlow Database',
    
    // Pagination
    pageRange: 'Records {start}-{end} of {total}',
    recordPageSizeOptions: ['20', '50', '100', '200'],
    recordsPerPage: 'Records per page:',
    previousPage: 'Previous',
    nextPage: 'Next',
    datasetNotFound: 'Dataset with ID {id} not found'
  },

  // Contact List Management
  contactList: {
    title: 'Contact Management',
    management: 'Contact Management',
    description: 'Manage your contact list and broadcast groups',
    searchPlaceholder: 'Search contacts...',
    allGroups: 'All Groups',
    allTags: 'All Tags',
    reset: 'Reset',
    import: 'Import',
    addContact: 'Add Contact',
    editContact: 'Edit Contact',
    deleteContact: 'Delete Contact',
    batchDelete: 'Batch Delete',
    selectedContacts: 'Selected {count} contacts',
    noContactsFound: 'No contacts found',
    noContactsDescription: 'Please add contacts or adjust search criteria',
    name: 'Name',
    title: 'Title',
    contactInfo: 'Contact Info',
    company: 'Company/Department',
    group: 'Group',
    tags: 'Tags',
    actions: 'Actions',
    edit: 'Edit',
    delete: 'Delete',
    confirmDelete: 'Confirm Delete',
    confirmDeleteMessage: 'Are you sure you want to delete contact "{name}"? This action cannot be undone.',
    cancel: 'Cancel',
    deleteSuccess: 'Contact deleted successfully',
    deleteError: 'Failed to delete contact',
    batchDeleteSuccess: 'Successfully deleted {count} contacts',
    batchDeleteError: 'Failed to batch delete contacts',
    updateSuccess: 'Contact updated successfully',
    createSuccess: 'Contact created successfully',
    updateError: 'Failed to update contact',
    createError: 'Failed to create contact',
    loadError: 'Failed to load contact list',
    whatsappNumber: 'WhatsApp Number',
    email: 'Email',
    companyName: 'Company Name',
    department: 'Department',
    position: 'Position',
    occupation: 'Occupation',
    noGroup: '-',
    noDescription: 'No description',
    // Form fields
    broadcastGroup: 'Broadcast Group',
    hashtags: 'Tags',
    // Form placeholders
    namePlaceholder: 'Enter name',
    titlePlaceholder: 'Enter title',
    occupationPlaceholder: 'Enter occupation',
    positionPlaceholder: 'Enter position',
    whatsappPlaceholder: 'Enter WhatsApp number',
    emailPlaceholder: 'Enter email',
    companyPlaceholder: 'Enter company name',
    departmentPlaceholder: 'Enter department',
    broadcastGroupPlaceholder: 'Select broadcast group',
    hashtagsPlaceholder: 'Enter tags, separated by commas',
    // Validation messages
    nameRequired: 'Please enter name',
    broadcastGroupRequired: 'Please select broadcast group',
    formValidationFailed: 'Form validation failed, please check required fields',
    // Buttons
    back: 'Back',
    save: 'Save',
    update: 'Update',
    create: 'Create',
    // Sidebar
    quickAddTags: 'Quick Add Tags',
    preview: 'Preview',
    currentTags: 'Current tags:',
    tagsLabel: 'Tags:'
  },

  // Broadcast Groups Management
  broadcastGroups: {
    title: 'Broadcast Groups Management',
    description: 'Manage contact groups for easy categorization and broadcasting',
    addGroup: 'Add Group',
    editGroup: 'Edit Group',
    deleteGroup: 'Delete Group',
    groupName: 'Group Name',
    groupDescription: 'Group Description',
    groupColor: 'Group Color',
    contactCount: 'Contact Count',
    createdAt: 'Created At',
    actions: 'Actions',
    edit: 'Edit',
    delete: 'Delete',
    confirmDelete: 'Confirm Delete',
    confirmDeleteMessage: 'Are you sure you want to delete group "{name}"? This action cannot be undone.',
    cancel: 'Cancel',
    create: 'Create',
    update: 'Update',
    createSuccess: 'Group created successfully',
    updateSuccess: 'Group updated successfully',
    deleteSuccess: 'Group deleted successfully',
    createError: 'Failed to create group',
    updateError: 'Failed to update group',
    deleteError: 'Failed to delete group',
    loadError: 'Failed to load group list',
    noGroupsFound: 'No groups found',
    noGroupsDescription: 'Please add a group',
    quickSelect: 'Quick Select:',
    namePlaceholder: 'Enter group name',
    descriptionPlaceholder: 'Enter group description',
    nameRequired: 'Please enter group name',
    formValidationFailed: 'Form validation failed, please check required fields'
  },

  // Hashtags Management
  hashtags: {
    title: 'Tag Management',
    description: 'Manage contact tags for easy categorization and filtering',
    addTag: 'Add Tag',
    editTag: 'Edit Tag',
    deleteTag: 'Delete Tag',
    tagName: 'Tag Name',
    description: 'Description',
    color: 'Color',
    usageCount: 'Usage Count',
    createdAt: 'Created At',
    actions: 'Actions',
    edit: 'Edit',
    delete: 'Delete',
    confirmDelete: 'Confirm Delete',
    confirmDeleteMessage: 'Are you sure you want to delete tag "{name}"?',
    cannotDeleteMessage: 'This tag is still used by {count} contacts and cannot be deleted.',
    cancel: 'Cancel',
    create: 'Create',
    update: 'Update',
    createSuccess: 'Tag created successfully',
    updateSuccess: 'Tag updated successfully',
    deleteSuccess: 'Tag deleted successfully',
    createError: 'Failed to create tag',
    updateError: 'Failed to update tag',
    deleteError: 'Failed to delete tag',
    loadError: 'Failed to load tag list',
    noTagsFound: 'No tags found',
    adjustSearch: 'Please adjust search criteria',
    searchPlaceholder: 'Search tags...',
    quickSelect: 'Quick Select:',
    namePlaceholder: 'Enter tag name',
    descriptionPlaceholder: 'Enter tag description',
    nameRequired: 'Please enter tag name',
    formValidationFailed: 'Form validation failed, please check required fields'
  },
  
  // Broadcast Groups Management
  broadcastGroupsOld: {
    title: 'Broadcast Groups',
    description: 'Manage contact groups for easy categorization and broadcasting',
    addGroup: 'Add Group',
    editGroup: 'Edit Group',
    deleteGroup: 'Delete Group',
    groupName: 'Group Name',
    description: 'Description',
    color: 'Color',
    contactCount: 'Contact Count',
    createdAt: 'Created At',
    noGroupsFound: 'No groups found',
    noGroupsDescription: 'Please add groups',
    confirmDelete: 'Confirm Delete',
    confirmDeleteMessage: 'Are you sure you want to delete group "{name}"? This action cannot be undone.',
    createSuccess: 'Group created successfully',
    updateSuccess: 'Group updated successfully',
    deleteSuccess: 'Group deleted successfully',
    createError: 'Failed to create group',
    updateError: 'Failed to update group',
    deleteError: 'Failed to delete group',
    loadError: 'Failed to load group list',
    quickSelect: 'Quick Select:',
    noDescription: 'No description'
  },

  // Contact Import
  contactImport: {
    title: 'Contact Import',
    selectSource: 'Select Data Source',
    selectSourceDesc: 'Choose the data source to import from',
    mapFields: 'Field Mapping',
    mapFieldsDesc: 'Map data fields to contact fields',
    importData: 'Import Data',
    importDataDesc: 'Confirm and start importing',
    
    // Data source options
    excelFile: 'Excel File',
    googleSheets: 'Google Sheets',
    sqlDatabase: 'SQL Database',
    uploadExcel: 'Upload Excel File',
    connectGoogle: 'Connect Google Sheets',
    connectSQL: 'Connect SQL Database',
    supportedFormats: 'Supports .xlsx, .xls, .csv formats',
    googleSheetsDesc: 'Import data from Google Sheets',
    sqlDatabaseDesc: 'Import data from SQL database',
    
    // SQL configuration
    sqlConfig: 'SQL Connection Configuration',
    server: 'Server',
    database: 'Database',
    username: 'Username',
    password: 'Password',
    tableName: 'Table Name',
    customQuery: 'Custom Query',
    testConnection: 'Test Connection',
    loadData: 'Load Data',
    
    // Field mapping
    dataPreview: 'Data Preview',
    fieldMapping: 'Field Mapping',
    selectColumn: 'Select Column',
    selectGroup: 'Select Group',
    name: 'Name',
    title: 'Title',
    occupation: 'Occupation',
    position: 'Position',
    whatsappNumber: 'WhatsApp Number',
    email: 'Email',
    companyName: 'Company Name',
    department: 'Department',
    hashtags: 'Tags',
    broadcastGroup: 'Broadcast Group',
    
    // Import process
    importing: 'Importing...',
    importSuccess: 'Import Successful!',
    successCount: 'Successfully imported {count} contacts',
    failedCount: 'Failed {count} records',
    errors: 'Error Details',
    backToList: 'Back to Contact List',
    importMore: 'Import More',
    previous: 'Previous',
    startImport: 'Start Import'
  },

  // Hashtags Management
  hashtags: {
    title: 'Tag Management',
    description: 'Manage contact tags for easy categorization and filtering',
    addTag: 'Add Tag',
    editTag: 'Edit Tag',
    deleteTag: 'Delete Tag',
    tagName: 'Tag Name',
    description: 'Description',
    color: 'Tag Color',
    usageCount: 'Usage Count',
    createdAt: 'Created At',
    actions: 'Actions',
    searchPlaceholder: 'Search tags...',
    noTagsFound: 'No tags found',
    noTagsDescription: 'Please add tags',
    noTagsSearchDescription: 'Please adjust search criteria',
    confirmDelete: 'Confirm Delete',
    confirmDeleteMessage: 'Are you sure you want to delete tag "{name}"?',
    cannotDeleteInUse: 'This tag is still used by {count} contacts and cannot be deleted.',
    createSuccess: 'Tag created successfully',
    updateSuccess: 'Tag updated successfully',
    deleteSuccess: 'Tag deleted successfully',
    createError: 'Failed to create tag',
    updateError: 'Failed to update tag',
    deleteError: 'Failed to delete tag',
    loadError: 'Failed to load tag list',
    quickSelect: 'Quick Select:',
    noDescription: 'No description'
  },


  // Contact Edit Page
  contactEdit: {
    title: 'Add Contact',
    editTitle: 'Edit Contact',
    back: 'Back',
    save: 'Save',
    create: 'Create',
    update: 'Update',
    cancel: 'Cancel',
    name: 'Name',
    nameRequired: 'Please enter name',
    title: 'Title',
    occupation: 'Occupation',
    position: 'Position',
    whatsappNumber: 'WhatsApp Number',
    email: 'Email',
    companyName: 'Company Name',
    department: 'Department',
    broadcastGroup: 'Broadcast Group',
    selectGroup: 'Select Group',
    tags: 'Tags',
    tagsPlaceholder: 'Enter tags, separated by commas',
    currentTags: 'Current Tags:',
    quickAddTags: 'Quick Add Tags',
    preview: 'Preview',
    createSuccess: 'Contact created successfully',
    updateSuccess: 'Contact updated successfully',
    createError: 'Failed to create contact',
    updateError: 'Failed to update contact',
    loadError: 'Failed to load contact data',
    loadOptionsError: 'Failed to load options data'
  }
};

export default en; 